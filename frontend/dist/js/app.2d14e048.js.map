{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/helpers/ModalController.js","webpack:///./src/components/UI/Modal.vue","webpack:///./src/components/UI/Modal.vue?5f55","webpack:///./src/utils/alert.js","webpack:///./src/components/UI/Alert.vue","webpack:///./src/utils/confirm.js","webpack:///./src/components/UI/Confirm.vue","webpack:///./src/components/UI/Loader.vue","webpack:///./src/components/UI/Loader.vue?9b41","webpack:///./src/utils/collection.js","webpack:///./src/utils/string.js","webpack:///./src/crypto/helpers/ConnectorTypes/index.js","webpack:///./src/crypto/helpers/ActionTypes/index.js","webpack:///./src/crypto/helpers/Formatters/index.js","webpack:///./src/crypto/helpers/TokensABI/index.js","webpack:///./src/crypto/helpers/ErrorList/index.js","webpack:///./src/utils/API.js","webpack:///./src/crypto/helpers/DecentralizedStorage/StorageBack.js","webpack:///./src/crypto/helpers/DecentralizedStorage/FileCoinStorage.js","webpack:///./src/crypto/helpers/DecentralizedStorage/CommonFunctions.js","webpack:///./src/crypto/helpers/DecentralizedStorage/index.js","webpack:///./src/crypto/helpers/Networks/index.js","webpack:///./src/crypto/helpers/AppStorage/index.js","webpack:///./src/crypto/helpers/ConnectionStore/index.js","webpack:///./src/crypto/helpers/Etherium/index.js","webpack:///./src/crypto/helpers/Token/index.js","webpack:///./src/utils/AppLogger.js","webpack:///./src/store/main.js","webpack:///./src/components/helpers/WalletConnect.js","webpack:///./src/crypto/EVM/SmartContract.js","webpack:///./src/crypto/EVM/index.js","webpack:///./src/crypto/EVM/rarible/ProviderStorage.js","webpack:///./src/crypto/EVM/rarible/ConnectionSteps.js","webpack:///./src/components/UI/Toggle.vue","webpack:///./src/components/UI/Toggle.vue?2ae8","webpack:///./src/components/UI/Sketch.vue","webpack:///./src/components/UI/Sketch.vue?f88c","webpack:///./src/utils/styles.js","webpack:///./src/utils/TrnView.js","webpack:///./src/components/gallery/Token.vue","webpack:///./src/components/gallery/Token.vue?c32b","webpack:///./src/components/gallery/Contract.vue","webpack:///./src/components/gallery/Contract.vue?f488","webpack:///./src/components/preview/ApplyAssets.vue","webpack:///./src/components/preview/ApplyAssets.vue?f4e9","webpack:///./src/components/preview/AddAssets.vue","webpack:///./src/components/preview/AddAssets.vue?214d","webpack:///./src/components/preview/InfoVisual.vue","webpack:///./src/components/preview/InfoVisual.vue?d286","webpack:///./src/components/preview/Info.vue","webpack:///./src/components/preview/Info.vue?da6c","webpack:///./src/components/UI/InputElement.vue","webpack:///./src/components/preview/Send.vue","webpack:///./src/components/preview/Send.vue?5f05","webpack:///./src/components/UI/icons/Copy.vue","webpack:///./src/components/UI/icons/Copy.vue?eff8","webpack:///./src/components/UI/icons/CopySuccess.vue","webpack:///./src/components/UI/icons/CopySuccess.vue?3613","webpack:///./src/components/UI/icons/NewTab.vue","webpack:///./src/components/UI/icons/NewTab.vue?a1b8","webpack:///./src/components/UI/icons/index.js","webpack:///./src/components/UI/CopyIcon.vue","webpack:///./src/components/UI/CopyIcon.vue?b445","webpack:///./src/components/preview/Modal.vue","webpack:///./src/components/preview/Modal.vue?d943","webpack:///./src/views/GalleryPage.vue","webpack:///./src/views/GalleryPage.vue?afb4","webpack:///./src/views/TokenDetail.vue","webpack:///./src/views/TokenDetail.vue?5ea6","webpack:///./src/components/UI/PageBlockActionLoading.vue","webpack:///./src/components/UI/PageBlockActionLoading.vue?2abe","webpack:///./src/views/ApplyPage.vue","webpack:///./src/views/ApplyPage.vue?4c2a","webpack:///./src/utils/file.js","webpack:///./src/components/UI/TakePhoto.vue","webpack:///./src/components/UI/TakePhoto.vue?24ea","webpack:///./src/components/UI/TokenMediaLoader.vue","webpack:///./src/components/UI/TokenMediaLoader.vue?ef3d","webpack:///./src/views/MintPage.vue","webpack:///./src/views/MintPage.vue?0a89","webpack:///./src/views/BundlePage.vue","webpack:///./src/views/BundlePage.vue?e86e","webpack:///./src/views/LoginPage.vue","webpack:///./src/router/index.js","webpack:///./src/crypto/EVM/rarible/Connector.js","webpack:///./src/crypto/EVM/rarible/index.js","webpack:///./src/crypto/AppConnector.js","webpack:///./src/components/modals/chooseWallet/Modal.vue","webpack:///./src/components/modals/chooseWallet/Modal.vue?40d5","webpack:///./src/components/modals/walletConnectQR/Modal.vue","webpack:///./src/components/modals/walletConnectQR/Modal.vue?9a20","webpack:///./src/components/modals/TransactionHash.vue","webpack:///./src/components/modals/TransactionHash.vue?cd84","webpack:///./src/components/modals/TransactionView.vue","webpack:///./src/App.vue","webpack:///./src/App.vue?6697","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ModalController","addClassName","openList","Set","open","this","add","setModalOpen","close","delete","size","document","body","classList","contains","remove","emit","modalSymbol","onMounted","onBeforeUnmount","__exports__","alert","reactive","active","title","message","closeTrigger","onClose","trigger","confirm","handlers","accept","cancel","customActions","addActions","actions","selectAction","actionObject","autoClose","onClick","class","_createElementVNode","_createElementBlock","_hoisted_2","_renderSlot","_ctx","script","render","CollectionType","EFFECT","BUNDLE","NONE","WHITE_LIST","canApplyEffect","type","includes","isBundle","getCollectionName","stringCompare","str1","str2","localeCompare","undefined","sensitivity","catToFixed","str","toLowerCase","maxLength","RARIBLE","uploading_media","uploading_meta_data","minting_token","need_a_sign","wait_transaction_result","check_address","sending_token","wrapping_tokens","approving_token","minting_bundle","minting_bundle_ledger","generating_media","deploying_contract","adding_to_bundle","removing_from_bundle","waiting","contractFormat","address","tokens","symbol","contractName","isUpdating","tokenFormat","id","contractAddress","image","description","link","uri","origin","attributes","startsWith","replace","fieldsForView","identity","inner","innerLoading","bundle","ABI","Bundle","abi","bytecode","effect","ERC721","whiteList","EffectsAllowList","default","codes","USER_NOT_CONNECTED","CONNECTOR_NOT_INIT","PROVIDER_NOT_FOUND","CONNECTOR_NAME_NOT_SPECIFIED","PARSE_RARIBLE_TOKENS","IMG_NOT_EXIST","APPLY_ERROR","LOAD_MEDIA_ERROR","TRN_COMPLETE","NETWORK_ERROR","ACCOUNT_TOKENS_READING","SEND_NFT","THE_SAME_ADDRESS","UNWRAPPING","CONTRACT_ADDRESS_ERROR","USE_THE_SAME_ADDRESS","CONTRACT_EXIST","CONTRACT_NOT_FOUND","METHOD_NOT_AVAILABLE","METHOD_NOT_DETECTED","TRANSPORT_NOT_SUPPORTED","DENIED_ACCESS","DEVICE_LOCKED_OR_APP_CLOSE","NOT_CONNECTED","TURN_ON_BLIND_SIGN","USER_REJECTED_TRANSACTION","HAVE_SPECIAL_ROLE","NETWORK_IN_NOT_INSTALLED","CHANGE_NETWORK_REJECTED","SWITCH_NETWORK_ERROR","HAVE_NOT_PERMISSION","INSUFFICIENT_FUNDS","getErrorTextByCode","code","error","entries","find","entry","axios","baseURL","process","timeout","HTTP","StorageAPI","IpnsAPI","file","File","Blob","JSON","stringify","formData","FormData","append","post","headers","save","e","Error","ErrorList","FileCoinStorage","ipfs","split","pop","keyGen","publish","ipfsHash","ipnsKey","ipnsHash","response","Array","isArray","bytes","randomBytes","keyName","join","Date","now","keyValue","newData","async","readData","url","meta","fetchURL","fetchWithPlainRequest","indexOf","isFinite","StorageBack","changeFile","networks","sepolia","chainId","transactionExplorer","accountExplorer","marketplaceExplorer","tokenID","gasLimit","contracts","adminAddress","bundleContract","effectsContract","maticmum","getAvailableNetworks","filter","toUpperCase","map","index","available","getNameByChainID","chainID","isSupport","getData","networkName","getSettings","freeze","_store","getStore","useStore","network","userIdentity","disconnectMethod","provider","providerForENSCheck","blockchain","wallet","setConnection","providerType","getSigner","AppStorage","setUserNetworkName","setUserIdentity","getProviderForENS","clearConnection","setNetwork","getNetwork","getUserIdentity","setDisconnectMethod","handler","setProvider","getProvider","setWallet","getWallet","console","warn","ethers","providers","Web3Provider","Roles","NoRole","Original","Modifier","nonRemoved","Traits","age","baby","child","teen","adult","senior","mood","angry","sad","general","happy","getAgeNameById","inputId","getMoodNameById","getTokenImageFileByName","inputName","imageName","imageBytes","fetch","then","blob","lastModified","getBaseFileURL","getFileIdByURL","applyAssets","serverURL","original_url","modificator_urls","sendBody","blobImage","responseType","newImage","URL","createObjectURL","transformIdentityToObject","token","tokenId","transformIdentitiesToObjects","identitiesList","addRole","tokenList","original","modifier","forEach","tokenIdentity","role","history","log","time","String","arguments","localStorage","getItem","findTokenRecursively","findInToken","findIdentity","isFind","availableNetworks","defineStore","state","isAppReady","collections","isCollectionsLoading","searchInput","preview","isOpen","uniqueKey","contract","modifiers","isWalletConnectModalOpen","walletConnectCode","walletConnectCloseHandler","isBundleMode","selectedForBundle","identities","loading","wallets","color","connection","userNetworkName","userNetworkSupported","explorers","transaction","account","block","shopURL","processStatus","addition","buyTokens","isForBuy","trait_type","style","getters","getFilteredCollections","collection","userIdentityShort","getExplorerLink","hash","findContractObject","getContractType","checkContractType","getShopTokens","getSearchCollectionsAndTokens","getTokenWithCollectionByIdentity","updateTokenImageAndAttributes","newAttributed","setTimeout","updateData","newHash","Math","random","searchParams","set","toString","tokenInStore","loop1","storeToken","tokenInPreview","toggleTokenForBundle","updateContractTokens","isExist","changeContractUpdating","changeCollectionLoadingState","setCollections","setProcessStatus","statusCode","additionParams","openWalletConnectQR","copyCode","closeHandler","closeWalletConnectQR","isAutomatic","setAppReady","blockExplorer","Networks","store","openPreview","setTokenInside","insideTokenList","changeLoadingInnerTokens","newState","closePreview","saveApplyEffect","originToken","styleToken","config","setItem","saveMakeBundle","restoreSavedTokensForBundle","parse","changeLoadingTokensForBundleState","saveTokensForBundle","cleanSavedTokensForBundle","removeItem","restoreApplyIdentities","saveRestoredTokensForApply","cleanSavedTokensForApply","useWalletConnection","storeToRefs","ref","networkAssets","submitAvailable","computed","selectedNetwork","selectedWallet","SmartContract","constructor","balance","_address","_type","metaData","fetchMetadata","fetchUserBalance","fetchTokensForUser","Contract","_getInstance","Number","balanceOf","arrayOfTokens","Promise","all","_","tokenOfOwnerByIndex","arrayOfTokensIds","tokenURI","allSettled","DecentralizedStorage","f","status","tokenObject","Formatters","tokensInside","bundeledTokensOf","trnParams","_trnBaseParams","transactionResult","unbundle","wait","fromAddress","toAddress","identityForApplying","ActionTypes","approve","tokensForBundle","bundleDataCID","approveTokenList","bundleWithTokenURI","metaCID","isAllowed","allowedToAddNFTs","addToTokenID","getTokenURI","checkPermissionToModifyBundle","callMethod","fromTokenID","method","args","forAddress","approvedFor","getApproved","tx","list","getEffectInfos","item","modificatorsContract","serverUrl","owner","onlyFor","originalContract","_instance","TokensABI","_getProvider","supportsInterface","resolve","forMethod","payMethods","keys","bundleBaseFee","MintFeeCoeff","baseFee","feeCoeff","resultFee","_provider","ConnectionStore","EVM","connector","init","connectToWallet","disconnect","isUserConnected","storage","contractsList","getContractWithTokens","baseImage","location","href","pathname","Token","baseImageURL","applyEffectImages","baseFile","tempURL","bundleImageFile","generateNewTokenImage","character","bundleImgId","newAttributes","newBundleMetaData","bundle_URI_id","characterImgId","newCharacterMetaData","character_URI_id","checkContractTypes","isEffect","contractInstance","plainContractObject","getObjectForUser","withUpdate","whiteListContract","getWhiteList","wrappedTokens","getWrappedTokenList","wrappedTokenIdentities","getTokenListByIdentity","identityList","getTokenByIdentity","getTokenById","getContractTokens","imageFile","imageURL","loadFile","saveMeta","metaURL","loadJSON","mint","things","originImages","applyImages","bundleMeta","bundleURI","originIdentity","modifierIdentities","tokensList","getApplyEffectServerURLByContractAddress","computedTokenList","resultTokenCID","tempImage","permanentImage","addingTokenIdentities","addingTokenList","isRemoveFromBundleAllow","removingTokens","toAddressPlain","realAddress","checkForENSName","utils","isAddress","ensName","resolveName","tryToConnectToUnsupportedNetwork","trnResult","storeName","getValue","setValue","initializing","connecting","connected","disconnected","change","emits","props","modelValue","inheritAttrs","logout","logOut","route","useRoute","computeTokenImgStyle","img","styles","background","TrnView","choose","isAvailable","isLoading","transactionHash","AppConnector","mintTestToken","updateContractTokensList","chooseToken","tokensView","step","selected","applying","router","useRouter","collectionsToChoose","selectedIdentities","contractsNeedToUpdate","addTokensToBundle","getWrappedTokensObjectList","propKeys","isAttributesAvailable","attribute","tokenAge","tokenMood","ageSelected","moodSelected","haveAttributesChanges","watch","saveNewAttributes","nextTick","cancelAttributesChange","viewProps","prop","setTempImage","isSending","send","sendNFT","viewBox","_hoisted_3","Icons","copy","Copy","copySuccess","CopySuccess","newTab","NewTab","isCopied","copyAddress","tokenTempImage","tokenImage","collectionName","section","changeSection","isPreviewLoading","unwrap","unbundleToken","fetchCollectionsWithTokens","removeFromBundle","canRemove","removeAssetsFromBundle","marketPlaceLink","isMakeBundleAvailable","addedTokensTypes","Boolean","addTokenContract","isCharacterAlreadyAdded","makeBundle","createBundle","tokenNotFound","params","initError","reason","isRestoreSuccess","restoredTokens","isSubmitAvailable","trim","confirmEffect","issuedContractAddress","applyEffectToToken","acceptedTypes","maxSize","checkFile","toFixed","lastShot","lastBlob","clearShot","photo","prevURL","revokeObjectURL","openCamera","video","canvas","mediaSize","longerSide","startRecord","srcObject","navigator","mediaDevices","getUserMedia","audio","play","takePhoto","width","height","context","getContext","drawImage","floor","videoWidth","videoHeight","toBlob","useLastShot","canPlayListener","addEventListener","removeEventListener","clickHandle","isTransportSelfie","isSelfieAvailable","input","createElement","setAttribute","getElementById","appendChild","onchange","preventDefault","fileForLoad","target","files","click","setFileFromSelfie","fileBlob","expose","setAvailableCollections","contractOptions","TokenMediaLoaderComponent","createNewToken","errorGettingSavedTokens","savedTokenIdentities","routes","path","component","GalleryPage","requiresAuth","TokenDetail","MintPage","ApplyPage","BundlePage","LoginPage","createRouter","createWebHistory","beforeEach","to","from","loginPage","query","need_auth","redirect","fullPath","controllerClass","_RaribleConnector","_connectingOptions","_connectToNetworkId","_disconnectMethod","_waitingForUserConnected","_status","_connectedOptions","setStatus","getStatus","makeConnectedCallbackFunction","promise","reject","getConnectedCallbackFunction","clearConnectedCallbackFunctions","reload","injected","mapEthereumWallet","InjectedWeb3ConnectionProvider","walletConnect","WalletConnectConnectionProvider","rpc","1","3","4","80001","1666700000","77","qrcodeModal","closeWrapper","Connector","ProviderStorage","getOptions","subscribe","con","ConnectionSteps","ethereum","getChainId","web3","currentProvider","givenProvider","isSwitched","switchNetwork","viewErrors","errorType","updateUserTokensAction","connectedNetworkName","needToUpdateUserTokens","Etherium","reloadPage","clearConnectedSettings","chainHEX","request","walletMeta","walletName","networkID","option","connect","Rarible","Evm","super","RaribleConnector","haveInnerTokens","needToAddTokenList","trn","addToBundle","bundleAge","bundleMood","bundleCopy","URI_id","removeToken","unwrapToken","createTokenMeta","sendToken","getSavedConnectorName","setSavedConnectorName","clearConnectorName","withType","connectorType","isConnecting","submit","ConnectorTypes","heedRedirect","copyBTN","pinia","createPinia","createApp","App","use","mount"],"mappings":"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","file":"js/app.2d14e048.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const ModalController = {\n    addClassName: 'modal-open',\n    openList: new Set(),\n    open(key) {\n        this.openList.add(key)\n        this.setModalOpen()\n    },\n    close(key) {\n        this.openList.delete(key)\n        this.setModalOpen()\n    },\n    setModalOpen(){\n        if(this.openList.size) {\n            if(!document.body.classList.contains(this.addClassName)) document.body.classList.add(this.addClassName)\n        }\n        else {\n            document.body.classList.remove(this.addClassName)\n        }\n    }\n}\n\nexport default ModalController","<template>\n  <div class=\"modal\" @click=\"close\">\n      <div class=\"modal__window\" @click.stop>\n        <div class=\"modal__title\">\n          <div>\n            <slot name=\"title\"></slot>\n          </div>\n          <span\n            class=\"modal__close\"\n            v-show=\"!props.options.withoutClose\"\n            @click=\"close\"\n          >\n            <svg viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.5 18L17.5 3M2.5 3L17.5 18\" stroke-width=\"2.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\n          </span>\n        </div>\n        <div class=\"modal__content\">\n          <slot></slot>\n        </div>\n        <div class=\"modal__controls\" v-if=\"$slots.controls\">\n          <slot name=\"controls\"></slot>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script setup>\n  import {onBeforeUnmount, onMounted} from \"vue\";\n  import ModalController from \"@/components/helpers/ModalController\";\n\n  const emit = defineEmits(['close'])\n  const close = () => emit('close')\n\n  const props = defineProps({\n      options: {\n          type: Object,\n          required: false,\n          default: {}\n      }\n  })\n\n  let modalSymbol = null\n  onMounted(() => {\n      modalSymbol = Symbol('modal')\n      ModalController.open(modalSymbol)\n  })\n\n  onBeforeUnmount(() => {\n      ModalController.close(modalSymbol)\n  })\n</script>","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive} from \"vue\";\n\nconst alert = reactive({\n    active: false,\n    title: 'Alert!',\n    message: '',\n    open(message = '', title = 'Alert!'){\n        this.title = title\n        this.message = message\n        this.active = true\n        return this\n    },\n    close(){\n        this.active = false\n        if(typeof this.closeTrigger === 'function') {\n            this.closeTrigger()\n            this.closeTrigger = null\n        }\n    },\n    closeTrigger: null,\n    onClose(trigger){\n        this.closeTrigger = trigger\n    }\n})\n\nexport default alert","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive} from \"vue\";\n\nconst confirm = reactive({\n    active: false,\n    message: '',\n    handlers: {\n        accept: null,\n        cancel: null\n    },\n    customActions: [],\n    open(message = '', accept = null, cancel = null){\n        this.message = message\n        this.handlers.accept = accept\n        this.handlers.cancel = cancel\n        this.active = true\n    },\n    close(){\n        this.active = false\n        this.handlers.accept = null\n        this.handlers.cancel = null\n        this.customActions = []\n    },\n    accept(){\n        if(this.handlers.accept) this.handlers.accept()\n        this.close()\n    },\n    cancel(){\n        if(this.handlers.cancel) this.handlers.cancel()\n        this.close()\n    },\n    /*\n    * @param actions[<confirmAction>], confirmAction:Object like {buttonName: '', onClick():void, autoClose: true}\n    * */\n    addActions(actions){\n        this.customActions = actions\n        return this\n    },\n    selectAction(actionObject){\n        if(actionObject.autoClose) this.close()\n        if(typeof actionObject.onClick === 'function') actionObject.onClick()\n    }\n})\n\nexport default confirm","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"loader\">\n    <div>\n      <span class=\"spinner\"></span>\n      <div class=\"loader__text\"><slot>Loading...</slot></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n\n</script>","import { render } from \"./Loader.vue?vue&type=template&id=88583356\"\nconst script = {}\n\nimport exportComponent from \"/Library/WebServer/Documents/doprojects/da/frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export const CollectionType = {\n    EFFECT: 'effect',\n    BUNDLE: 'bundle',\n    NONE: 'none',\n    WHITE_LIST: 'white_list',\n\n    canApplyEffect(type){\n        return [this.BUNDLE, this.NONE].includes(type)\n    },\n    isBundle(type){\n        return this.BUNDLE === type\n    },\n    getCollectionName(type){\n        return (type === this.EFFECT)? 'Effects' : (type === this.BUNDLE)? 'Bundles' : 'Other'\n    }\n}","export function stringCompare(str1 = '', str2 = '') {\n    if(!str1) str1 = ''\n    if(!str2) str2 = ''\n    return !str1.localeCompare(str2, undefined, {sensitivity:'accent'})\n}\n\nexport function getMarkedText(valueOrigin, query) {\n    let value = valueOrigin.toLowerCase()\n\n    let count = 0;\n    let diff = [];\n\n    let findIndex = 0\n    do{\n        if(count > 20) break\n        count++\n\n        let searchFrom = findIndex\n        let findOn = value.indexOf(query, searchFrom)\n\n        if(~findOn) {\n            diff.push(valueOrigin.slice(searchFrom, findOn))\n            diff.push(valueOrigin.substr(findOn, query.length))\n            findIndex = findOn + query.length\n        }\n        else {\n            diff.push(valueOrigin.slice(searchFrom))\n            break\n        }\n    }\n    while (true);\n    diff = diff.filter(w => w.length).map(text => ({marked: text.toLowerCase() === query, text}))\n\n    return diff\n}\n\nexport function catToFixed(str = ''){\n    if((typeof str).toLowerCase() !== 'string') return ''\n    const maxLength = 10\n    if(str.length <= maxLength) return str;\n    return `${str.slice(0, 6)}...${str.slice(-4)}`\n}\n\nexport function shortCat(str = '', maxLength = 30){\n    if((typeof str).toLowerCase() !== 'string') return ''\n    if(str.length <= maxLength) return str;\n    return `${str.slice(0, maxLength)}...`\n}","export default {\n    RARIBLE: 'rarible'\n}","export default {\n    uploading_media: 'uploading_media',\n    uploading_meta_data: 'uploading_meta_data',\n    minting_token: 'minting_token',\n    need_a_sign: 'need_a_sign',\n    wait_transaction_result: 'wait_transaction_result',\n    check_address: 'check_address',\n    sending_token: 'sending_token',\n    wrapping_tokens: 'wrapping_tokens',\n    approving_token: 'approving_token',\n    minting_bundle: 'minting_bundle',\n    minting_bundle_ledger: 'minting_bundle_ledger',\n    generating_media: 'generating_media',\n    deploying_contract: 'deploying_contract',\n    adding_to_bundle: 'adding_to_bundle',\n    removing_from_bundle: 'removing_from_bundle',\n    waiting: 'waiting'\n}","import {CollectionType} from \"@/utils/collection\";\n\nexport function contractFormat({\n   address,\n   tokens = [],\n   name = null,\n   symbol = null,\n   type = CollectionType.NONE\n}){\n\n    let contractName = name || address\n\n    if(type === CollectionType.BUNDLE) contractName = `[Bundle] ${contractName}`\n    else if(type === CollectionType.EFFECT) contractName = `[Effect] ${contractName}`\n\n    return {\n        address,\n        name: contractName,\n        symbol: symbol || '',\n        tokens,\n        isUpdating: false,\n        type\n   }\n}\n\nexport function tokenFormat({\n    id,\n    contractAddress,\n    name = null,\n    image = null,\n    description = null,\n    link = null,\n    uri = null,\n    origin = null,\n    attributes = []\n}){\n   if(image && image.startsWith('ipfs://ipfs/')) image = image.replace('ipfs://', 'https://ipfs.io/')\n\n    const fieldsForView = []\n    fieldsForView.push({key: 'name', value: name || id})\n    if(description) fieldsForView.push({key: 'description', value: description})\n    if(link) fieldsForView.push({key: 'link', value: link})\n\n    return {\n        id,\n        uri,\n        contractAddress,\n        identity: `${contractAddress}:${id}`,\n        name: name || id,\n        image,\n        description,\n        link,\n        attributes,\n        fieldsForView,\n        inner: [],\n        innerLoading: false,\n        origin\n   }\n}","import Bundle from './BundleNFT.json'\nimport ERC721 from './ERC721.json'\nimport EffectsAllowList from './EffectsAllowList.json'\n\nexport default {\n    bundle: {\n        ABI: Bundle.abi,\n        bytecode: Bundle.bytecode\n    },\n    effect: {\n        ABI: ERC721.abi,\n        bytecode: ERC721.bytecode\n    },\n    whiteList: {\n        ABI: EffectsAllowList.abi,\n        bytecode: EffectsAllowList.bytecode\n    },\n    default: {\n        ABI: ERC721.abi,\n        bytecode: ERC721.bytecode\n    }\n}","const codes = {\n    USER_NOT_CONNECTED: '1000',\n    CONNECTOR_NOT_INIT: '1001',\n    PROVIDER_NOT_FOUND: '1002',\n    CONNECTOR_NAME_NOT_SPECIFIED: '1003',\n    PARSE_RARIBLE_TOKENS: '1004',\n    IMG_NOT_EXIST: '1005',\n    APPLY_ERROR: '1006',\n    LOAD_MEDIA_ERROR: '1007',\n    TRN_COMPLETE: '1008',\n    NETWORK_ERROR: '1009',\n    ACCOUNT_TOKENS_READING: '1010',\n    SEND_NFT: '1011',\n    THE_SAME_ADDRESS: '1012',\n    UNWRAPPING: '1013',\n    CONTRACT_ADDRESS_ERROR: '1014',\n    USE_THE_SAME_ADDRESS: '1015',\n    CONTRACT_EXIST: '1016',\n    CONTRACT_NOT_FOUND: '1017',\n    METHOD_NOT_AVAILABLE: '1018',\n    METHOD_NOT_DETECTED: '1019',\n    TRANSPORT_NOT_SUPPORTED: '2000',\n    DENIED_ACCESS: '2001',\n    DEVICE_LOCKED_OR_APP_CLOSE: '2002',\n    NOT_CONNECTED: '2003',\n    TURN_ON_BLIND_SIGN: '2004',\n    USER_REJECTED_TRANSACTION: '2005',\n    HAVE_SPECIAL_ROLE: '2006',\n    NETWORK_IN_NOT_INSTALLED: 'NETWORK_IN_NOT_INSTALLED',\n    CHANGE_NETWORK_REJECTED: 'CHANGE_NETWORK_REJECTED',\n    SWITCH_NETWORK_ERROR: 'SWITCH_NETWORK_ERROR',\n    HAVE_NOT_PERMISSION: 'HAVE_NOT_PERMISSION',\n    INSUFFICIENT_FUNDS: 'INSUFFICIENT_FUNDS'\n}\n\nexport default codes\n\nexport function getErrorTextByCode(code) {\n    const error = Object.entries(codes).find(entry => entry[1] === code)\n    return error? error[0] : null\n}","import axios from \"axios\";\n\nconst AppAPI = axios.create({\n    baseURL: process.env.VUE_APP_API_ENDPOINT,\n    timeout: process.env.VUE_APP_API_TIMEOUT * 1000\n})\n\nexport default AppAPI\n\nexport const HTTP = axios.create({\n    timeout: process.env.VUE_APP_API_TIMEOUT * 1000\n})\n\nexport const StorageAPI = axios.create({\n    baseURL: process.env.VUE_APP_STORAGE_ENDPOINT,\n    timeout: process.env.VUE_APP_API_TIMEOUT * 1000\n})\n\nexport const IpnsAPI = axios.create({\n    baseURL: process.env.VUE_APP_IPNS_ENDPOINT,\n    timeout: process.env.VUE_APP_API_TIMEOUT * 1000\n})","import {StorageAPI} from \"@/utils/API\";\nimport {ErrorList} from '@/crypto/helpers'\n\nexport default {\n    async save(file, id = null){\n        if(!(file instanceof File)){\n            file = new Blob([JSON.stringify(file)], {type: 'application/json'});\n        }\n\n        const formData = new FormData();\n        formData.append('file', file)\n        formData.append('file_type', file.type)\n        if(id) formData.append('file_id', id)\n        const result = await StorageAPI.post('', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        return `${process.env.VUE_APP_STORAGE_ENDPOINT}/${result.data}`\n    },\n\n    /*\n    * Put JSON to IPFS\n    * @param {data} - js object\n    * @return {string} cid\n    * */\n    async loadJSON(data = {}){\n        try{\n            // let file = new Blob([JSON.stringify(data)], {type: 'application/json'});\n            return await this.save(data)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n\n    /*\n    * Put file to IPFS\n    * @param {object} file - instance of Blob/File\n    * @return {string} file_url\n    * */\n    async loadFile(file){\n        try{\n            return await this.save(file)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n\n    async changeFile(file, id){\n        try{\n            return await this.save(file, id)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n}","import {IpnsAPI} from \"@/utils/API\";\nimport {randomBytes} from \"ethers/lib/utils\";\nimport {ErrorList} from \"@/crypto/helpers\";\n\nconst FileCoinStorage = {\n    async save(file, key = null) {\n        if(!(file instanceof File)) {\n            file = new Blob([JSON.stringify(file)], {type: 'application/json'});\n        }\n        const formData = new FormData();\n        formData.append('payload', file)\n        const result = await IpnsAPI.post('/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        let ipfs = ''\n        if(result.data && result.data.startsWith('ipfs://')) {\n            ipfs = result.data.split('://').pop()\n        }\n        else throw Error('IPFS value not valid')\n\n        if(!key) ({value: key} = await this.keyGen())\n\n        return await this.publish(ipfs, key)\n    },\n    async publish(ipfsHash, ipnsKey) {\n        let ipnsHash = null\n        let i = 0\n        while (i < +process.env.VUE_APP_IPNS_ATTEMPTS || 10) {\n            try {\n                const response = await IpnsAPI.post('/publish', `hash=${ipfsHash}&key_name=${ipnsKey}`)\n                if(Array.isArray(response.data) && response.data.length === 2 && response.data[0] && response.data[1]) {\n                    ipnsHash = response.data[0]\n                    break;\n                }\n                else throw Error('IPFS value not valid')\n            }\n            catch (e) {}\n            finally{\n                i++\n            }\n        }\n        if(ipnsHash && ipnsHash === ipnsKey) return `https://ipfs.io/ipns/${ipnsHash}`\n        else throw Error('Could not publish to IPNS')\n    },\n    async keyGen() {\n        const bytes = randomBytes(10)\n        const keyName = bytes.join('') + Date.now();\n        let keyValue = ''\n\n        const response = await IpnsAPI.post('/key_gen', `name=${keyName}`)\n        if(Array.isArray(response.data) && response.data.length === 2 && response.data[1]) {\n            keyValue = response.data[1]\n        }\n        else throw Error('IPNS key pail failed')\n\n        return {\n            name: keyName,\n            value: keyValue\n        }\n    },\n\n    async loadJSON(data = {}){\n        try{\n            return await this.save(data)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n    async loadFile(file){\n        try{\n            return await this.save(file)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n    async changeFile(newData, key) {\n        try{\n            return await this.save(newData, key)\n        }\n        catch (e){\n            throw Error(ErrorList.LOAD_MEDIA_ERROR)\n        }\n    },\n}\n\nexport default FileCoinStorage","import {HTTP} from \"@/utils/API\";\n\nexport async function readData(url){\n    let meta = null\n    try{\n        if(!url.startsWith('ipfs://') && !url.startsWith('http')) url = 'ipfs://'+url\n        let fetchURL = null\n        if(url.startsWith('ipfs://')) fetchURL = `https://ipfs.io/ipfs/${url.replace('ipfs://', '')}`\n        else if(url.startsWith('http')) fetchURL = url\n        if(fetchURL){\n\n            const fetchWithPlainRequest = async () => {\n                const response = await HTTP.get(fetchURL, {headers: {'accept': 'application/json'}})\n                if(response.headers['content-type'].indexOf('application/json') !== -1 && response.data) {\n                    meta = response.data\n                    meta.uri = fetchURL\n                }\n            }\n\n            await fetchWithPlainRequest()\n        }\n    } catch (e) {\n        meta = null\n        if(e.message === 'Network Error'){\n            throw e\n        }\n    }\n    return meta\n}","import StorageBack from \"./StorageBack\";\nimport FileCoinStorage from \"./FileCoinStorage\";\nimport {readData} from \"@/crypto/helpers/DecentralizedStorage/CommonFunctions\";\n\nexport default {\n    ...FileCoinStorage,\n    readData,\n    async changeFile(newData, key){\n        if(isFinite(key)) return await StorageBack.changeFile(newData, key);\n        return await FileCoinStorage.changeFile(newData, key);\n    }\n}","const networks = {\n    sepolia: {\n        meta: {\n            title: 'Sepolia',\n            image: 'ether',\n            chainId: 11155111,\n            transactionExplorer: \"https://sepolia.etherscan.io/tx/\",\n            accountExplorer: \"https://sepolia.etherscan.io/address/\",\n            marketplaceExplorer: (contractAddress, tokenID) => `https://testnets.opensea.io/assets/mumbai/${contractAddress}/${tokenID}`,\n            gasLimit: 400000\n        },\n        contracts: {\n            // whiteListContract: '0x559acfdb7a30fb6ecf5883c1f25b9eb2a34cf37a',\n            adminAddress: '0xD25A41039DEfD7c7F0fBF6Db3D1Df60b232c6067',\n            bundleContract: '0xca9ce00d3d8a4305e9e5e75de7ebf5d70dbeafed',\n            effectsContract: '0x42f37b32036899e54b6d2ad37ccbeba199631943',\n        }\n    },\n    maticmum: {\n        meta: {\n            title: 'Mumbai testnet',\n            image: 'polygon',\n            chainId: 80001,\n            transactionExplorer: \"https://mumbai.polygonscan.com/tx/\",\n            accountExplorer: \"https://mumbai.polygonscan.com/address/\",\n            marketplaceExplorer: (contractAddress, tokenID) => `https://testnets.opensea.io/assets/mumbai/${contractAddress}/${tokenID}`,\n            gasLimit: 400000\n        },\n        contracts: {\n            // whiteListContract: '0x6fc2aa966015164624c888d9f7ec407c59353ca7',\n            adminAddress: '0xD25A41039DEfD7c7F0fBF6Db3D1Df60b232c6067',\n            bundleContract: '0xea60808018daf160529d46943782d95665105e7b',\n            effectsContract: '0x01f310dd597e61b24e91e48fa5284e8c65379a41',\n        }\n    }\n}\nObject.freeze(networks)\n\nexport function getAvailableNetworks() {\n    return Object.entries(networks)\n        .filter(([name, {meta, contracts}]) => {\n            return !!+process.env[`VUE_APP_NETWORK_${name.toUpperCase()}_SUPPORT`] &&\n                meta.title &&\n                (meta.chainId || meta.image === 'near') &&\n                contracts.bundleContract &&\n                contracts.effectsContract\n        })\n        .map(([name, {meta: {title, image, chainId}}], index) => ({\n            id: chainId,\n            name: title,\n            key: image,\n            available: true\n        }))\n}\n\nexport function getNameByChainID(chainID){\n    const [name] = Object.entries(networks).find(([, data]) => data.meta.chainId === chainID) || ['unknown']\n    let isSupport = (name !== 'unknown')? !!+process.env[`VUE_APP_NETWORK_${name.toUpperCase()}_SUPPORT`] : false\n    return isSupport? name : 'unknown'\n}\n\nexport function getData(networkName){\n    return networks[networkName.toLowerCase()]?.meta || null\n}\n\nexport function getSettings(networkName){\n    return networks[networkName.toLowerCase()]?.contracts || null\n}","import {useStore} from \"@/store/main\";\n\n/*\n* Bridge to vue store pinia\n* */\n\nexport default {\n    _store: null,\n\n    getStore(){\n        if(!this._store) this._store = useStore();\n        return this._store\n    },\n}","import AppStorage from '@/crypto/helpers/AppStorage'\n\nexport default {\n    network: {\n        name: null,\n        id: null\n    },\n    userIdentity: null,\n    disconnectMethod: null,\n\n    // JsonRpcProvider or Web3Provider Signer for interact with contract\n    provider: null,\n    providerForENSCheck: null,\n    blockchain: null,\n    wallet: null,\n\n    setConnection({\n      network = {name: null, id: null},\n      userIdentity = null,\n      disconnectMethod = null,\n      provider = null,\n      providerType = null,\n      blockchain = null,\n      wallet = null\n    } = {}){\n        this.network.name = network.name\n        this.network.id = network.id\n        this.userIdentity = userIdentity\n        this.disconnectMethod = disconnectMethod\n        this.blockchain = blockchain\n        this.wallet = wallet\n\n        if(provider && providerType){\n            this.provider = (providerType === 'Web3Provider')? provider.getSigner() : provider\n            this.providerForENSCheck = provider\n        }\n        else{\n            this.provider = null\n            this.providerForENSCheck = null\n        }\n\n        AppStorage.getStore().setUserNetworkName(network.name)\n        AppStorage.getStore().setUserIdentity(userIdentity)\n    },\n\n    getProviderForENS(){\n        return this.providerForENSCheck\n    },\n\n    clearConnection(){\n        this.setConnection()\n    },\n\n    setNetwork(name = null, chainId = null){\n        this.network.name = name\n        this.network.id = chainId\n        AppStorage.getStore().setUserNetworkName(name)\n    },\n\n    getNetwork(){\n        return this.network\n    },\n\n    setUserIdentity(value){\n        this.userIdentity = value\n        AppStorage.getStore().setUserIdentity(value)\n    },\n\n    getUserIdentity(){\n        return this.userIdentity\n    },\n\n    setDisconnectMethod(handler){\n        this.disconnectMethod = handler\n    },\n\n    // set provider object for interact with contract in future\n    setProvider(provider, type = 'JsonRpcProvider'){\n        this.provider = (type === 'Web3Provider')? provider.getSigner() : provider\n        this.providerForENSCheck = provider\n    },\n\n    getProvider(){\n        return this.provider\n    },\n\n    setWallet(wallet){\n        this.wallet = wallet\n    },\n\n    getWallet(){\n        return this.wallet\n    },\n\n    // user log out\n    async logOut(){\n        if(typeof this.disconnectMethod === 'function'){\n            // metamask, walletConnect, ledger return promise, all methods automatically reload page\n            // near does not return promise\n            try{\n                await this.disconnectMethod()\n            }\n            catch (e) {\n                console.warn('Error logout', e)\n            }\n        }\n        else {\n            console.warn('logOut method not detected')\n        }\n    }\n}","import {ethers} from \"ethers\";\n\n/*\n* @param provider - from connector.connection.subscribe\n* */\nexport function getProvider(provider) {\n    return new ethers.providers.Web3Provider(provider, \"any\")\n}","import {HTTP} from \"@/utils/API\";\n\nexport const Roles = {\n    NoRole: 0,\n    Original: 1,\n    Modifier: 2,\n    nonRemoved: [1, 2]\n}\n\nexport const Traits = {\n    age: {\n        baby: 0,\n        child: 1,\n        teen: 2,\n        adult: 3,\n        senior: 4\n    },\n    mood: {\n        angry: 1,\n        sad: 2,\n        general: 3,\n        happy: 4\n    },\n    getAgeNameById(inputId) {\n        return Object.entries(this.age).find(([, id]) => id === inputId)?.[0]\n    },\n    getMoodNameById(inputId) {\n        return Object.entries(this.mood).find(([, id]) => id === inputId)?.[0]\n    }\n}\n\nexport async function getTokenImageFileByName(inputName) {\n    const imageName = inputName.split('/').pop()\n    const imageBytes = await fetch(`/img/characters/${imageName}`).then(r => r.blob())\n\n    return new File([imageBytes], imageName, {\n        lastModified: new Date(),\n        type: imageBytes.type\n    })\n}\n\nexport function getBaseFileURL(url){\n    return url.split('#').shift()\n}\n\nexport function getFileIdByURL(url){\n    return url.split('#').shift().split('/').pop()\n}\n\nexport async function applyAssets(serverURL, original_url, modificator_urls = []){\n    const sendBody = {\n        original_url,\n        modificator_urls\n    }\n\n    const {data: blobImage} = await HTTP.post(\n        serverURL,\n        sendBody,\n        {\n            responseType: 'blob'\n        }\n    )\n\n    const newImage = new File([blobImage], 'image', {\n        lastModified: new Date(),\n        type: blobImage.type\n    })\n\n    return {\n        file: newImage,\n        blob: URL.createObjectURL(blobImage),\n    }\n}\n\nexport function transformIdentityToObject(identity){\n    const [token, tokenId] = identity.split(':')\n    return {token, tokenId}\n}\n\nexport function transformIdentitiesToObjects(identitiesList){\n    return identitiesList.map(transformIdentityToObject)\n}\n\nexport function addRole(tokenList, {original = [], modifier = []} = {}){\n    tokenList.forEach(token => {\n        const tokenIdentity = `${token.token}:${token.tokenId}`\n        token.role = original.includes(tokenIdentity) && Roles.Original || modifier.includes(tokenIdentity) && Roles.Modifier || Roles.NoRole\n    })\n}","const history = []\n\nexport function log(){\n    history.push({\n        time: String(new Date),\n        arguments\n    })\n    if(process.env.NODE_ENV === 'development' || localStorage.getItem('devMode')){\n        console.log(...arguments);\n    }\n}","import {defineStore} from \"pinia\";\nimport {CollectionType} from \"@/utils/collection\";\nimport {catToFixed, stringCompare} from \"@/utils/string\";\nimport ModalController from \"@/components/helpers/ModalController\";\nimport {Networks} from \"@/crypto/helpers\";\nimport {log} from \"@/utils/AppLogger\";\nimport {Traits} from \"@/crypto/helpers/Token\";\n\nfunction findTokenRecursively(findInToken, findIdentity) {\n    if (stringCompare(findInToken.identity, findIdentity)) return findInToken\n    for (const token of findInToken.inner) {\n        const isFind = findTokenRecursively(token, findIdentity)\n        if (isFind) return isFind\n    }\n    return null\n}\n\nimport {getAvailableNetworks} from \"@/crypto/helpers/Networks\";\nconst availableNetworks = getAvailableNetworks()\n\nexport const useStore = defineStore('main', {\n    state: () => ({\n        isAppReady: false,\n        collections: [],\n        isCollectionsLoading: false,\n        searchInput: '',\n        preview: {\n            isOpen: false,\n            uniqueKey: '',\n            token: null,\n            contract: null,\n            modifiers: []\n        },\n        isWalletConnectModalOpen: false,\n        walletConnectCode: '',\n        walletConnectCloseHandler: null,\n\n        isBundleMode: false,\n        selectedForBundle: {\n            tokens: [],\n            identities: [],\n            loading: false\n        },\n\n        networks: availableNetworks,\n        wallets: [\n            {id: 1, name: 'MetaMask', key: 'Metamask', color: '#FFFFFF', available: true},\n            {id: 3, name: 'WalletConnect', key: 'walletconnect', color: '#D9ECFF', available: true},\n            {id: 2, name: '1inch', key: '1inch', color: '#0E131D', available: true},\n        ],\n\n        connection: {\n            userIdentity: null,\n            userNetworkName: null,\n            userNetworkSupported: false\n        },\n\n        explorers: {\n            transaction: '',\n            account: '',\n            block: ''\n        },\n        shopURL: '',\n\n        processStatus: {\n            code: '',\n            addition: []\n        },\n\n        buyTokens: {\n            [CollectionType.BUNDLE]: [\n                /*{\n                    \"image\":\"https://ipfs.io/ipfs/bafybeicakwvqjaaodbeemresxcctnexfqgwj5ygty2qcn6ewg3iu4z7nj4/file\",\n                    \"name\":\"Blue Fish\",\n                    \"link\":\"https://pixabay.com/ru/\",\n                    \"description\":\"This is blue fish\",\n                    \"attributes\": [\n                        {\n                            trait_type: 'age',\n                            value: Traits.age.baby\n                        },\n                        {\n                            trait_type: 'mood',\n                            value: Traits.mood.general\n                        }\n                    ],\n                    id: '123432',\n                    contractAddress: 'gdfjhgjhkljgkfj',\n                    identity: `123432:gdfjhgjhkljgkfj`,\n                    fieldsForView: [\n                        {key: 'name', value: 'Blue Fish'}\n                    ],\n                    inner: [],\n                    innerLoading: false\n                },*/\n                {\n                    isForBuy: true,\n                    image: '/img/characters/baby-general.png',\n                    name: 'Baby',\n                    description: 'Baby general',\n                    link: null,\n                    attributes: [\n                        {\n                            trait_type: 'age',\n                            value: Traits.age.baby\n                        },\n                        {\n                            trait_type: 'mood',\n                            value: Traits.mood.general\n                        }\n                    ],\n                },\n                {\n                    isForBuy: true,\n                    image: '/img/characters/child-general.png',\n                    name: 'Child',\n                    description: 'Child general',\n                    link: null,\n                    attributes: [\n                        {\n                            trait_type: 'age',\n                            value: Traits.age.child\n                        },\n                        {\n                            trait_type: 'mood',\n                            value: Traits.mood.general\n                        }\n                    ],\n                },\n                {\n                    isForBuy: true,\n                    image: '/img/characters/teen-general.png',\n                    name: 'Teen',\n                    description: 'Teen general',\n                    link: null,\n                    attributes: [\n                        {\n                            trait_type: 'age',\n                            value: Traits.age.teen\n                        },\n                        {\n                            trait_type: 'mood',\n                            value: Traits.mood.general\n                        }\n                    ],\n                },\n\n                /*{\n                    isForBuy: true,\n                    image: '/img/test-tokens/mountains_2.jpeg',\n                    name: 'Mountains 2',\n                    cid: 'bafybeie4cexpij2k6px4cprqektt6alkdvv2p7w4ujdnocmxs67dv75rpe/file'\n                },\n                {\n                    isForBuy: true,\n                    image: '/img/test-tokens/mountains_3.jpeg',\n                    name: 'Mountains 3',\n                    cid: 'bafybeigdiwy2iay2nnmxemzdfnvbbedmiwzg5pppnl2jcptbv4c3c4yxbe/file'\n                }*/\n            ],\n            [CollectionType.EFFECT]: [\n                {\n                    isForBuy: true,\n                    image: '/img/characters/star_1.png',\n                    name: 'Star',\n                    description: '',\n                    link: null\n                },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_1.jpeg',\n                //     name: 'Mountains 1',\n                //     cid: 'bafybeihoistczqwg3xyzebwjp2vtjtem3qryuukr5skwng2fcrhumvkdea/file'\n                // },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_2.jpeg',\n                //     name: 'Mountains 2',\n                //     cid: 'bafybeie4cexpij2k6px4cprqektt6alkdvv2p7w4ujdnocmxs67dv75rpe/file'\n                // },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_3.jpeg',\n                //     name: 'Mountains 3',\n                //     cid: 'bafybeigdiwy2iay2nnmxemzdfnvbbedmiwzg5pppnl2jcptbv4c3c4yxbe/file'\n                // }\n            ],\n            [CollectionType.NONE]: [\n                {\n                    isForBuy: true,\n                    image: '/img/characters/star_1.png',\n                    name: 'Star',\n                    description: '',\n                    link: null\n                },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_1.jpeg',\n                //     name: 'Mountains 1',\n                //     cid: 'bafybeihoistczqwg3xyzebwjp2vtjtem3qryuukr5skwng2fcrhumvkdea/file'\n                // },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_2.jpeg',\n                //     name: 'Mountains 2',\n                //     cid: 'bafybeie4cexpij2k6px4cprqektt6alkdvv2p7w4ujdnocmxs67dv75rpe/file'\n                // },\n                // {\n                //     isForBuy: true,\n                //     image: '/img/test-tokens/mountains_3.jpeg',\n                //     name: 'Mountains 3',\n                //     cid: 'bafybeigdiwy2iay2nnmxemzdfnvbbedmiwzg5pppnl2jcptbv4c3c4yxbe/file'\n                // }\n            ]\n        },\n\n        apply: {\n            origin: {\n                token: null,\n                identity: null\n            },\n            style: {\n                token: null,\n                identity: null\n            }\n        }\n    }),\n    getters: {\n        getFilteredCollections: state => type => state.collections.filter(collection => collection.type === type),\n        userIdentityShort: state => catToFixed(state.connection.userIdentity || ''),\n        getExplorerLink: state => (type, hash = '') => state.explorers[type]? state.explorers[type] + hash : state.explorers.transaction + hash,\n        findContractObject: state => contractAddress => state.collections.find(collection => stringCompare(collection.address, contractAddress)),\n        getContractType: state => contractAddress => {\n            const contract = state.findContractObject(contractAddress)\n            return contract? contract.type : null\n        },\n        checkContractType: state => (contractAddress, type) => {\n            return state.getContractType(contractAddress) === type\n        },\n        getShopTokens: state => (type, contractAddress) => {\n            return (state.buyTokens[type]? [...state.buyTokens[type]] : []).map(token => {\n                token.contractAddress = contractAddress\n                return token\n            })\n        },\n        getSearchCollectionsAndTokens: state => {\n            return state.collections\n        },\n        getTokenWithCollectionByIdentity: state => identity => {\n            const [contractAddress, tokenID] = identity.split(':')\n            const contract = state.findContractObject(contractAddress)\n            if(contract) {\n                return {\n                    token: contract.tokens.find(t => stringCompare(t.id, tokenID)),\n                    contract\n                }\n            }\n            return null\n        }\n    },\n    actions: {\n        // updateTokenImageAndAttributes(token, newAttributed = null, newImage = null){\n        updateTokenImageAndAttributes(token, newAttributed = null){\n            setTimeout(() => {\n                const updateData = token => {\n                    const image = new URL(token.image)\n                    const newHash = `${Date.now()}${Math.random()}`\n                    image.searchParams.set('hash', newHash)\n                    image.hash = `#${newHash}`\n\n                    token.image = image.toString()\n\n                    if(newAttributed){\n                        token.attributes = newAttributed\n                        token.origin.attributes = newAttributed\n                    }\n                }\n\n                let tokenInStore = null\n                loop1: for (const contract of this.collections) {\n                    for (const storeToken of contract.tokens) {\n                        const isFind = findTokenRecursively(storeToken, token.identity)\n                        if (isFind) {\n                            tokenInStore = isFind\n                            break loop1\n                        }\n                    }\n                }\n\n                if (tokenInStore) updateData(tokenInStore)\n\n                if (this.preview.token){\n                    const tokenInPreview = findTokenRecursively(this.preview.token, token.identity)\n                    if (tokenInPreview) updateData(tokenInPreview)\n                }\n            }, 300)\n        },\n        toggleTokenForBundle(token){\n            if(this.selectedForBundle.identities.includes(token.identity)) this.selectedForBundle.identities = this.selectedForBundle.identities.filter(t => !stringCompare(t, token.identity))\n            else this.selectedForBundle.identities.push(token.identity)\n        },\n        updateContractTokens(contractAddress, tokens){\n            const isExist = this.findContractObject(contractAddress)\n            if(isExist) isExist.tokens = tokens\n        },\n        changeContractUpdating(contractAddress, value){\n            const isExist = this.findContractObject(contractAddress)\n            if(isExist) isExist.isUpdating = value\n        },\n        changeCollectionLoadingState(value){\n            this.isCollectionsLoading = value\n        },\n        setCollections(collections){\n            this.collections = collections\n            log('setCollections', collections)\n        },\n        setProcessStatus(statusCode = '', ...additionParams){\n            this.processStatus.code = statusCode\n            this.processStatus.addition.splice(0, this.processStatus.addition.length, ...additionParams)\n        },\n        openWalletConnectQR(copyCode, closeHandler){\n            this.walletConnectCode = copyCode\n            this.walletConnectCloseHandler = closeHandler\n            this.isWalletConnectModalOpen = true\n        },\n        closeWalletConnectQR({isAutomatic = false} = {}){\n            if(!isAutomatic && this.walletConnectCloseHandler) this.walletConnectCloseHandler()\n            this.isWalletConnectModalOpen = false\n            this.walletConnectCloseHandler = null\n        },\n        setAppReady(){\n            this.isAppReady = true\n        },\n        setUserIdentity(value = null){\n            this.connection.userIdentity = value\n        },\n        setUserNetworkName(value = null){\n            this.connection.userNetworkName = value\n            if(value){\n                const {\n                    transactionExplorer,\n                    accountExplorer,\n                    blockExplorer\n                } = Networks.getData(value)\n                this.explorers.transaction = transactionExplorer\n                this.explorers.account = accountExplorer\n                this.explorers.block = blockExplorer\n                const {store} = Networks.getSettings(value)\n                this.shopURL = store\n            }\n        },\n        openPreview(token) {\n            const contract = this.findContractObject(token.contractAddress)\n            if(contract){\n                const modifiers = CollectionType.canApplyEffect(contract.type)? this.getFilteredCollections(CollectionType.EFFECT) : []\n\n                this.preview.token = token\n                this.preview.contract = contract\n                this.preview.modifiers = modifiers\n                this.preview.isOpen = true\n\n                ModalController.open(this.preview.uniqueKey = Symbol('preview'))\n            }\n        },\n        setTokenInside(contractAddress, tokenID, insideTokenList){\n            const contract = this.findContractObject(contractAddress)\n            if(contract){\n                const token = contract.tokens.find(t => t.id === tokenID)\n                if(token) token.inner = insideTokenList\n                if(this.preview.token && this.preview.token.identity === `${contractAddress}:${tokenID}`){\n                    this.preview.token.inner = insideTokenList\n                }\n            }\n        },\n        changeLoadingInnerTokens(contractAddress, tokenID, newState){\n            const contract = this.findContractObject(contractAddress)\n            if(contract){\n                const token = contract.tokens.find(t => t.id === tokenID)\n                if(token) token.innerLoading = newState\n            }\n        },\n        closePreview(){\n            this.preview.isOpen = false\n            setTimeout(() => {\n                this.preview.token = this.preview.contract = null\n                this.preview.modifiers = []\n                ModalController.close(this.preview.uniqueKey)\n            }, 300)\n        },\n        saveApplyEffect(originToken, styleToken){\n            const config = {\n                origin: originToken.identity,\n                style: styleToken.identity\n            }\n            window.localStorage.setItem('apply-effect-config', JSON.stringify(config))\n            this.apply.origin.token = originToken\n            this.apply.origin.identity = originToken.identity\n            this.apply.style.token = styleToken\n            this.apply.style.identity = styleToken.identity\n        },\n        saveMakeBundle(){\n            const config = this.selectedForBundle.identities\n            window.localStorage.setItem('make-bundle-config', JSON.stringify(config))\n        },\n        restoreSavedTokensForBundle(){\n            try{\n                const config = JSON.parse(window.localStorage.getItem('make-bundle-config') || '[]')\n                if(config && config.length){\n                    this.selectedForBundle.identities = config\n                    return config\n                }\n            }\n            catch (e) {\n                log('restoreApplyIdentities error', e)\n            }\n            return false\n        },\n        changeLoadingTokensForBundleState(newState){\n            this.selectedForBundle.loading = newState\n        },\n        saveTokensForBundle(tokens){\n            this.selectedForBundle.tokens = tokens\n        },\n        cleanSavedTokensForBundle(){\n            window.localStorage.removeItem('make-bundle-config')\n            this.selectedForBundle.tokens = []\n            this.selectedForBundle.identities = []\n        },\n        restoreApplyIdentities(){\n            try{\n                const config = JSON.parse(window.localStorage.getItem('apply-effect-config') || '{}')\n                if(config && config.origin && config.style){\n                    this.apply.origin.identity = config.origin\n                    this.apply.style.identity = config.style\n                    return true\n                }\n            }\n            catch (e) {\n                log('restoreApplyIdentities error', e)\n            }\n            return false\n        },\n        saveRestoredTokensForApply(origin, style){\n            this.apply.origin.token = origin\n            this.apply.style.token = style\n        },\n        cleanSavedTokensForApply(){\n            window.localStorage.removeItem('apply-effect-config')\n            this.apply.origin.token = null\n            this.apply.style.token = null\n        }\n    }\n})","import {useStore} from \"@/store/main\";\nimport {storeToRefs} from \"pinia\";\nimport {computed, ref} from \"vue\";\n\nexport function useWalletConnection(){\n    const store = useStore()\n\n    const {\n        connection,\n        networks,\n        wallets\n    } = storeToRefs(store);\n\n    const network = ref(null)\n    const wallet = ref(null)\n\n    const networkAssets = '/img/connect/'\n\n    const submitAvailable = computed(() => network.value && wallet.value)\n\n    const isOpen = computed(() => !connection.value.userIdentity)\n    return {\n        isOpen,\n        networks,\n        wallets,\n        selectedNetwork: network,\n        selectedWallet: wallet,\n        networkAssets,\n        close: () => {\n            // can`t close\n        },\n        setNetwork: value => {\n            network.value = value\n        },\n        setWallet: value => wallet.value = value,\n        submitAvailable\n    }\n}\n","import { Contract } from \"ethers\";\nimport {stringCompare} from \"@/utils/string\";\nimport {log} from \"@/utils/AppLogger\";\n\nimport {\n    DecentralizedStorage,\n    Formatters,\n    ConnectionStore,\n    ErrorList,\n    TokensABI,\n    ActionTypes, Networks\n} from '@/crypto/helpers'\n\n\nclass SmartContract {\n\n    _address = null\n    _type = null\n\n    //  ethers contract instance\n    _instance = null\n    _provider = null\n\n    metaData = {\n        address: null,\n        name: null,\n        symbol: null,\n        tokens: [],\n        balance: 0\n    }\n\n    /*\n    * @param options: object, address = string in hex, type = CollectionType\n    * */\n    constructor({address, type = 'common'}){\n        this._address = address\n        this._type = type\n        this.metaData.address = address\n    }\n\n    async getObjectForUser(userIdentity){\n        log(`[SmartContract] get contract: ${this._address}, for user: ${userIdentity}`)\n        await this.fetchMetadata()\n        await this.fetchUserBalance(userIdentity)\n        await this.fetchTokensForUser(userIdentity)\n        return this.metaData\n    }\n\n    async fetchMetadata(){\n        const Contract = await this._getInstance()\n        try{\n            this.metaData.name = await Contract.name()\n            this.metaData.symbol = await Contract.symbol() || ''\n        }\n        catch (e){\n            log('[SmartContract] Error get contract meta from contract ' + this._address, e);\n        }\n    }\n\n    async fetchUserBalance(userIdentity){\n        const Contract = await this._getInstance()\n        try {\n            this.metaData.balance = Number(await Contract.balanceOf(userIdentity))\n        }\n        catch (e) {\n            log(`[SmartContract] Error get user balance for contract ${this._address}`, e);\n        }\n        return this.metaData.balance\n    }\n\n    async fetchTokensForUser(userIdentity){\n        const Contract = await this._getInstance()\n        const balance = this.metaData.balance || await this.fetchUserBalance(userIdentity)\n\n        try{\n\n            //  get token ids\n            let arrayOfTokens = await Promise.all([...new Array(balance)].map((_, index) => Contract.tokenOfOwnerByIndex(userIdentity, index)))\n            log('[SmartContract] plain token ids', arrayOfTokens);\n\n            //  convert them into string\n            arrayOfTokens = arrayOfTokens.map(id => (typeof id === 'object')? String(id) : id)\n            log('[SmartContract] computed token ids', arrayOfTokens);\n\n            //  save token ids in separate var\n            const arrayOfTokensIds = [...arrayOfTokens]\n\n            //  get each token URI\n            arrayOfTokens = await Promise.all(arrayOfTokens.map(id => Contract.tokenURI(id)))\n            log('[SmartContract] token URI`s', arrayOfTokens);\n\n            // const arrayOfTokensURI = arrayOfTokens;\n\n            arrayOfTokens = (await Promise.allSettled(arrayOfTokens.map(uri => DecentralizedStorage.readData(uri)))).filter(f => f.status === 'fulfilled' && f.value).map(f => f.value)\n            log('[SmartContract] plain tokens meta data', arrayOfTokens);\n\n            //  approach each token object to app format\n            arrayOfTokens = arrayOfTokens.map((tokenObject, index) => {\n                return Formatters.tokenFormat({\n                    id: arrayOfTokensIds[index],\n                    contractAddress: this._address,\n                    address: arrayOfTokensIds[index],\n                    // uri: arrayOfTokensURI[index],\n                    origin: tokenObject,\n                    ...tokenObject\n                })\n            })\n            log('[SmartContract] computed tokens meta data', arrayOfTokens);\n\n            this.metaData.tokens = arrayOfTokens\n        }\n        catch (e) {\n            log('[SmartContract] Error in fetchTokensForUser', e, Contract);\n        }\n\n        return this.metaData.tokens\n    }\n\n    async getTokenById(tokenID){\n        const Contract = await this._getInstance()\n\n        const tokenURI = await Contract.tokenURI(tokenID)\n        const tokenObject = await DecentralizedStorage.readData(tokenURI)\n\n        return Formatters.tokenFormat({\n            id: tokenID,\n            contractAddress: this._address,\n            uri: tokenURI,\n            origin: tokenObject,\n            ...tokenObject\n        })\n    }\n\n    async getWrappedTokenList(tokenID){\n        const Contract = await this._getInstance()\n        const tokensInside = await Contract.bundeledTokensOf(tokenID)\n        return tokensInside.map(token => ({\n            contractAddress: token.token,\n            tokenID: token.tokenId.toString(),\n            role: token.role\n        }))\n    }\n\n    async unwrapToken(tokenID){\n        const Contract = await this._getInstance()\n        try{\n            const trnParams = await this._trnBaseParams('unbundle')\n            const transactionResult = await Contract.unbundle(tokenID, trnParams)\n            const result = await transactionResult.wait()\n            if(result.status !== 1) throw Error()\n            return result\n        }\n        catch (e){\n            log('unwrapToken error', e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            else if(e.message.includes('insufficient funds')) throw Error(ErrorList.INSUFFICIENT_FUNDS)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async sendToken(tokenID, fromAddress, toAddress){\n        try{\n            const Contract = await this._getInstance()\n            const transactionResult = await Contract['safeTransferFrom(address,address,uint256)'](fromAddress, toAddress, tokenID)\n            return await transactionResult.wait()\n        }\n        catch (e){\n            log('mint error', e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async approveTokenList(tokenList, setProcessStatus = null){\n        for await (const identityForApplying of tokenList){\n            if(typeof setProcessStatus === 'function') setProcessStatus(ActionTypes.approving_token, identityForApplying.tokenId)\n            const contract = new this.constructor({\n                address: identityForApplying.token\n            })\n            await contract.approve(this._address, identityForApplying.tokenId)\n        }\n        return true\n    }\n\n    /*\n    * @param tokensForBundle: Array<{token: contractAddress, tokenId}>\n    * @param bundleDataCID: String from object {...meta, ...tokensInBundleDetails, image: bundleImage}, (bundleImage like: https://ipfs.io/Qm...)\n    * */\n    async makeBundle(tokensForBundle, bundleDataCID, setProcessStatus){\n        const Contract = await this._getInstance()\n\n        //  approve all tokens\n        await this.approveTokenList(tokensForBundle, setProcessStatus)\n\n        setProcessStatus(ActionTypes.minting_bundle)\n\n        try{\n            const trnParams = await this._trnBaseParams('bundleWithTokenURI')\n            const transactionResult = await Contract.bundleWithTokenURI(tokensForBundle, bundleDataCID, trnParams)\n            return await transactionResult.wait()\n        }\n        catch (e){\n            log('mint error', e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async mint(userIdentity, metaCID){\n        const Contract = await this._getInstance()\n        try{\n            const trnParams = await this._trnBaseParams('mintItem(address,string)')\n            const transactionResult = await Contract['mintItem(address,string)'](userIdentity, metaCID, trnParams)\n            return await transactionResult.wait()\n        }\n        catch (e){\n            log('mint error', e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async checkPermissionToModifyBundle(tokenId) {\n        const Contract = await this._getInstance()\n        const isAllowed = await Contract.allowedToAddNFTs(tokenId)\n        if(!isAllowed) throw Error(ErrorList.HAVE_NOT_PERMISSION)\n        return true\n    }\n\n    async addToBundle(addToTokenID, tokenList){\n        const tokenURI = await this.getTokenURI(addToTokenID)\n        await this.checkPermissionToModifyBundle(addToTokenID)\n        const trnParams = await this._trnBaseParams('addNFTsToBundle')\n        return await this.callMethod('addNFTsToBundle', addToTokenID, tokenList, tokenURI, trnParams)\n    }\n\n    async removeFromBundle(fromTokenID, tokenList){\n        const tokenURI = await this.getTokenURI(fromTokenID)\n        await this.checkPermissionToModifyBundle(fromTokenID)\n        const trnParams = await this._trnBaseParams('removeNFTsFromBundle')\n        return await this.callMethod('removeNFTsFromBundle', fromTokenID, tokenList, tokenURI, trnParams)\n    }\n\n    async getTokenURI(tokenID){\n        const Contract = await this._getInstance()\n        return await Contract.tokenURI(tokenID)\n    }\n\n    async callWithoutSign(method, ...args){\n        const Contract = await this._getInstance()\n        try{\n            return await Contract[method](...args)\n        }\n        catch (e){\n            log(`callWithoutSign ${method} error`, e);\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    /*\n    * General definition of interact with contract methods\n    * */\n    async callMethod(method, ...args){\n        log(`callMethod ${method}`, args);\n        const Contract = await this._getInstance()\n        try{\n            const transactionResult = await Contract[method](...args)\n            return await transactionResult.wait()\n        }\n        catch (e){\n            log(`callMethod ${method} error`, e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            else if(e.message.includes('E03')) throw Error(ErrorList.HAVE_SPECIAL_ROLE)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async approve(forAddress, tokenID){\n        const Contract = await this._getInstance()\n        const approvedFor = await this.getApproved(tokenID)\n        if(approvedFor && stringCompare(approvedFor, forAddress)) return\n        try{\n            const tx = await Contract.approve(forAddress, tokenID)\n            return await tx.wait()\n        }\n        catch (e){\n            log('mint error', e);\n            if(e.code === 4001) throw Error(ErrorList.USER_REJECTED_TRANSACTION)\n            throw Error(ErrorList.TRN_COMPLETE)\n        }\n    }\n\n    async getApproved(tokenID){\n        const Contract = await this._getInstance()\n        return await Contract.getApproved(tokenID)\n    }\n\n    async getWhiteList(){\n        const Contract = await this._getInstance()\n        const list = await Contract.getEffectInfos() || []\n        return list.map(item => ({\n            contractAddress: item.modificatorsContract,\n            serverUrl: item.serverUrl,\n            owner: item.owner,\n            onlyFor: Number(item.originalContract) && item.originalContract || null\n        }))\n    }\n\n    async setCorrectContractType(){\n        await this._getInstance()\n        return this._type\n    }\n\n    async _getInstance(){\n        if(!this._instance){\n            this._instance = await new Promise( async (resolve) => {\n                let abi;\n                if(this._type === 'bundle') abi = TokensABI.bundle.ABI\n                else if(this._type === 'allowList') abi = TokensABI.whiteList.ABI\n                else abi = TokensABI.default.ABI\n                let contract = new Contract(this._address, abi, this._getProvider())\n\n                try{\n                    const isBundle = await contract.supportsInterface(process.env.VUE_APP_BUNDLE_INTERFACE_ID)\n                    if (isBundle && this._type !== 'bundle') {\n                        this._type = 'bundle'\n                        contract = new Contract(this._address, TokensABI.bundle.ABI, this._getProvider())\n                    }\n                    else if (!isBundle && this._type !== 'allowList') {\n                        this._type = 'common'\n                        contract = new Contract(this._address, TokensABI.default.ABI, this._getProvider())\n                    }\n                }\n                catch (e) {}\n                resolve(contract)\n            })\n        }\n        return this._instance\n    }\n\n    async _trnBaseParams(forMethod){\n        if (this._type !== 'bundle') return {}\n        const payMethods = {\n            'mintItem(address,string)': 'MintFeeCoeff',\n            'bundleWithTokenURI': 'CreateBundleFeeCoeff',\n            'removeNFTsFromBundle': 'RemoveFromBundleFeeCoeff',\n            'addNFTsToBundle': 'AddToBundleFeeCoeff',\n            'unbundle': 'UnbundleFeeCoeff'\n        }\n        if(Object.keys(payMethods).includes(forMethod)){\n            const Contract = await this._getInstance()\n\n            // only if contract accept\n            try{\n                if(Contract.bundleBaseFee && Contract.MintFeeCoeff){\n                    const baseFee = await Contract.bundleBaseFee()\n                    const feeCoeff = await Contract[payMethods[forMethod]]()\n                    const resultFee = +baseFee * +feeCoeff + ''\n                    return {\n                        value: resultFee\n                    }\n                }\n            }\n            catch (e) {\n                log(`Contract ${this._address} dont support bundle interface`)\n            }\n        }\n        return {}\n    }\n\n    _getProvider(){\n        if(!this._provider) this._provider = ConnectionStore.getProvider();\n        return this._provider\n    }\n\n}\n\nexport default SmartContract","import {\n    Networks,\n    ConnectionStore,\n    Formatters,\n    AppStorage,\n    Token,\n    DecentralizedStorage,\n    ActionTypes\n} from '@/crypto/helpers'\nimport SmartContract from '@/crypto/EVM/SmartContract.js'\nimport {CollectionType} from \"@/utils/collection\";\nimport {stringCompare} from \"@/utils/string\";\nimport alert from \"@/utils/alert\";\nimport {ethers} from \"ethers\";\nimport {log} from \"@/utils/AppLogger\";\n\nclass EVM {\n\n    constructor(){\n\n    }\n\n\n    /* ---------- Connected methods ON  ----------  */\n    async init(){\n        return await this.connector.init(this)\n    }\n    async connectToWallet(...data){\n        return await this.connector.connectToWallet(...data)\n    }\n    async disconnect(){\n        return await this.connector.disconnect()\n    }\n    async isUserConnected(){\n        return await this.connector.isUserConnected()\n    }\n    /*  ----------  Connected methods OFF  ----------  */\n\n\n    async fetchCollectionsWithTokens(){\n        const storage = AppStorage.getStore()\n        storage.changeCollectionLoadingState(true)\n\n        const {\n            bundleContract,\n            effectsContract,\n        } = Networks.getSettings(ConnectionStore.getNetwork().name)\n\n        const contractsList = [bundleContract, effectsContract]\n\n        const collections = await Promise.all(contractsList.map(contractAddress => this.getContractWithTokens(contractAddress)))\n\n        storage.changeCollectionLoadingState(false)\n        storage.setCollections(collections)\n    }\n\n    async generateNewTokenImage({age, mood}, {inner = []} = {}){\n        const store = AppStorage.getStore()\n\n        const baseImage = new URL(window.location.href)\n        baseImage.pathname = `/img/characters/${Token.Traits.getAgeNameById(+age)}-${Token.Traits.getMoodNameById(+mood)}.png`\n        const baseImageURL = baseImage.toString()\n\n        const applyEffectImages = inner.filter(t => !store.checkContractType(t.contractAddress, CollectionType.BUNDLE)).map(t => t.origin.image)\n\n        if(applyEffectImages.length){\n            const {file, blob} = await Token.applyAssets(\n                process.env.VUE_APP_APPLY_EFFECT_ENDPOINT,\n                baseImageURL,\n                applyEffectImages\n            )\n            const baseFile = await Token.getTokenImageFileByName(baseImageURL)\n            return {\n                file,\n                baseFile,\n                tempURL: blob,\n            }\n        }\n        const file = await Token.getTokenImageFileByName(baseImageURL)\n        return {\n            file,\n            baseFile: file,\n            tempURL: baseImageURL\n        }\n    }\n\n    async saveNewAttributes(token, {age, mood}){\n        const {file: bundleImageFile, baseFile} = await this.generateNewTokenImage({age, mood}, token)\n\n        const store = AppStorage.getStore()\n        const character = token.inner.find(t => store.checkContractType(t.contractAddress, CollectionType.BUNDLE))\n\n        const bundleImgId = Token.getFileIdByURL(token.origin.image)\n        await DecentralizedStorage.changeFile(bundleImageFile, bundleImgId)\n\n        const newAttributes = [\n            {\n                trait_type: 'age',\n                value: +age\n            },\n            {\n                trait_type: 'mood',\n                value: +mood\n            }\n        ]\n\n        const newBundleMetaData = {\n            ...JSON.parse(JSON.stringify(token.origin)),\n            attributes: newAttributes\n        }\n\n        const bundle_URI_id = Token.getFileIdByURL(token.uri)\n        await DecentralizedStorage.changeFile(newBundleMetaData, bundle_URI_id)\n        store.updateTokenImageAndAttributes(token, newAttributes)\n\n        if(character) {\n            const characterImgId = Token.getFileIdByURL(character.origin.image)\n            await DecentralizedStorage.changeFile(baseFile, characterImgId)\n\n            const newCharacterMetaData = {\n                ...JSON.parse(JSON.stringify(character.origin)),\n                attributes: newAttributes\n            }\n\n            const character_URI_id = Token.getFileIdByURL(character.uri)\n            await DecentralizedStorage.changeFile(newCharacterMetaData, character_URI_id)\n\n            store.updateTokenImageAndAttributes(character, newAttributes)\n        }\n\n        return true\n    }\n\n    async getContractWithTokens(address){\n        const userIdentity = ConnectionStore.getUserIdentity()\n        const contract = new SmartContract({\n            address\n        })\n\n        const checkContractTypes = {\n            isBundle: null,\n            isEffect: null\n        }\n        const contractInstance = await contract._getInstance()\n\n        checkContractTypes.isBundle = await contractInstance.supportsInterface(process.env.VUE_APP_BUNDLE_INTERFACE_ID)\n        checkContractTypes.isEffect = !checkContractTypes.isBundle\n\n        const plainContractObject = await contract.getObjectForUser(userIdentity)\n\n        if(checkContractTypes.isBundle) plainContractObject.type = CollectionType.BUNDLE\n        else if(checkContractTypes.isEffect) plainContractObject.type = CollectionType.EFFECT\n        else plainContractObject.type = CollectionType.NONE\n\n        return Formatters.contractFormat(plainContractObject)\n    }\n\n    whiteList = []\n    async getWhiteList({withUpdate = false} = {}){\n        if(!withUpdate && this.whiteList.length) return this.whiteList\n\n        const {\n            whiteListContract: address,\n        } = Networks.getSettings(ConnectionStore.getNetwork().name)\n\n        const contract = new SmartContract({\n            address,\n            type: CollectionType.WHITE_LIST\n        })\n\n        return this.whiteList = await contract.getWhiteList()\n    }\n\n    async getApplyEffectServerURLByContractAddress(contractAddress) {\n        const whiteList = await this.getWhiteList()\n        return whiteList.find(item => stringCompare(item.contractAddress, contractAddress))?.serverUrl\n    }\n\n    async getContractTokens(contractAddress){\n        const contract = new SmartContract({\n            address: contractAddress\n        })\n        return await contract.fetchTokensForUser(ConnectionStore.getUserIdentity())\n    }\n\n    async getWrappedTokensObjectList(contractAddress, tokenID){\n        const storage = AppStorage.getStore()\n        storage.changeLoadingInnerTokens(contractAddress, tokenID, true)\n        const contract = new SmartContract({\n            address: contractAddress,\n            type: CollectionType.BUNDLE\n        })\n        const wrappedTokens = await contract.getWrappedTokenList(tokenID)\n        const wrappedTokenIdentities = wrappedTokens.map(token => `${token.contractAddress}:${token.tokenID}`)\n        const tokens = await this.getTokenListByIdentity(wrappedTokenIdentities)\n\n        // add roles\n        tokens.forEach(token => {\n            const originToken = wrappedTokens.find(t => t.contractAddress === token.contractAddress && t.tokenID === token.id)\n            token.role = originToken? originToken.role : Token.Roles.NoRole\n        })\n\n        storage.setTokenInside(contractAddress, tokenID, tokens)\n        storage.changeLoadingInnerTokens(contractAddress, tokenID, false)\n        return tokens\n    }\n\n    async getTokenListByIdentity(identityList){\n        return await Promise.all(identityList.map(identity => this.getTokenByIdentity(identity)))\n    }\n\n    async getTokenByIdentity(identity){\n        const [address, tokenID] = identity.split(':')\n        const contract = new SmartContract({\n            address\n        })\n        return await contract.getTokenById(tokenID)\n    }\n\n\n\n\n\n\n    async updateContractTokensList(list) {\n        try{\n            await Promise.all(list.map(address => this.updateContractTokens(address)))\n        }\n        catch (e) {\n            log('updateContractTokensList', e);\n        }\n    }\n\n    async updateContractTokens(contractAddress){\n        const storage = AppStorage.getStore()\n        try{\n            storage.changeContractUpdating(contractAddress, true)\n            const tokens = await this.getContractTokens(contractAddress, true)\n            storage.updateContractTokens(contractAddress, tokens)\n        }\n        catch (e) {\n            log('updateContractTokens', e);\n        }\n        finally {\n            storage.changeContractUpdating(contractAddress, false)\n        }\n    }\n\n\n\n\n    async mintTestToken({contractAddress, ...meta}){\n        const imageFile = await Token.getTokenImageFileByName(meta.image)\n        const imageURL = await DecentralizedStorage.loadFile(imageFile)\n\n        const saveMeta = {\n            name: meta.name,\n            image: imageURL,\n            // image_origin: imageURL,\n            link: meta.link,\n            description: meta.description,\n            attributes: meta.attributes || []\n        }\n\n        const metaURL = await DecentralizedStorage.loadJSON(saveMeta)\n\n        const contract = new SmartContract({\n            address: contractAddress\n        })\n        return await contract.mint(ConnectionStore.getUserIdentity(), metaURL)\n    }\n\n    async createBundle(tokens){\n        const store = AppStorage.getStore()\n\n        const character = tokens.find(t => CollectionType.isBundle(t.contract.type))\n        const things = tokens.filter(t => !CollectionType.isBundle(t.contract.type))\n\n\n        store.setProcessStatus(ActionTypes.generating_media)\n\n        const originImages = character.token.origin.image\n        const applyImages = things.map(t => t.token.origin.image)\n\n        const {file} = await Token.applyAssets(\n            process.env.VUE_APP_APPLY_EFFECT_ENDPOINT,\n            originImages,\n            applyImages\n        )\n\n        store.setProcessStatus(ActionTypes.uploading_meta_data)\n\n        const bundleMeta = JSON.parse(JSON.stringify(character.token.origin))\n        bundleMeta.image = await DecentralizedStorage.loadFile(file)\n\n        const bundleURI = await DecentralizedStorage.loadFile(bundleMeta)\n\n        const originIdentity = character.token.identity\n        const modifierIdentities = things.map(t => t.token.identity)\n\n        const tokensList = Token.transformIdentitiesToObjects([originIdentity, ...modifierIdentities])\n        Token.addRole(tokensList, {\n            original: [originIdentity],\n            modifier: modifierIdentities\n        })\n\n        const {\n            bundleContract: address\n        } = Networks.getSettings(ConnectionStore.getNetwork().name)\n\n        return {\n            address,\n            metaCID: bundleURI,\n            tokensList\n        }\n    }\n\n    async createTokenMeta(meta, image){\n        const storage = AppStorage.getStore()\n\n        storage.setProcessStatus(ActionTypes.uploading_media)\n        meta.image = await DecentralizedStorage.loadFile(image)\n\n        storage.setProcessStatus(ActionTypes.uploading_meta_data)\n        const metaCID = await DecentralizedStorage.loadJSON(meta)\n\n        return {\n            metaCID\n        }\n    }\n\n    async applyEffectToToken({name, link, description}, original, effect){\n        const storage = AppStorage.getStore()\n\n        storage.setProcessStatus(ActionTypes.generating_media)\n\n        const serverURL = await this.getApplyEffectServerURLByContractAddress(effect.contractAddress)\n\n        let {url: image, blob} = await Token.applyAssets(serverURL, original, effect)\n\n        storage.setProcessStatus(ActionTypes.uploading_meta_data)\n        const metaCID = await DecentralizedStorage.loadJSON({\n            name,\n            description,\n            image,\n            link\n        })\n\n        const computedTokenList = Token.transformIdentitiesToObjects([original.identity, effect.identity])\n        Token.addRole(computedTokenList, {\n            original: [original.identity],\n            modifier: [effect.identity]\n        })\n\n        const {\n            bundleContract: contractAddress\n        } = Networks.getSettings(ConnectionStore.getNetwork().name)\n\n        return {\n            resultTokenCID: metaCID,\n            contractAddress,\n            tokensList: computedTokenList,\n            tempImage: blob,\n            permanentImage: image\n        }\n    }\n\n\n\n\n\n    async addTokensToBundle(tokenList){\n        const addingTokenIdentities = tokenList.map(t => t.identity)\n        const computedTokenList = Token.transformIdentitiesToObjects(addingTokenIdentities)\n        computedTokenList.forEach(token => {\n            token.role = Token.Roles.NoRole\n        })\n\n        return {\n            addingTokenList: computedTokenList\n        }\n    }\n\n    isRemoveFromBundleAllow(token){\n        return !Token.Roles.nonRemoved.includes(token.role)\n    }\n\n    async removeAssetsFromBundle(tokenList){\n        const addingTokenIdentities = tokenList.map(t => t.identity)\n        const computedTokenList = Token.transformIdentitiesToObjects(addingTokenIdentities)\n        computedTokenList.forEach(token => {\n            token.role = Token.Roles.NoRole\n        })\n        return {\n            removingTokens: computedTokenList\n        }\n    }\n\n\n\n\n\n    async sendNFT(tokenObject, toAddressPlain) {\n        const {realAddress: toAddress} = await this.checkForENSName(toAddressPlain)\n        const [contractAddress, tokenID] = tokenObject.identity.split(':')\n        const fromAddress = ConnectionStore.getUserIdentity()\n        if(stringCompare(fromAddress, toAddress)) throw Error('THE_SAME_ADDRESS_ERROR')\n\n        return {\n            contractAddress,\n            tokenID,\n            fromAddress,\n            toAddress\n        }\n    }\n\n\n    async checkForENSName(address){\n        if(ethers.utils.isAddress(address)){\n            return {\n                realAddress: address,\n                ensName: address\n            }\n        }\n        else{\n            let realAddress;\n            try{\n                realAddress = await ConnectionStore.getProviderForENS().resolveName(address)\n            }\n            catch (e){\n                log(e)\n                throw new Error('CONTRACT_ADDRESS_ERROR')\n            }\n            if(realAddress && ethers.utils.isAddress(realAddress)){\n                return {\n                    realAddress: realAddress,\n                    ensName: address\n                }\n            }\n            else {\n                throw new Error('CONTRACT_ADDRESS_ERROR')\n            }\n        }\n    }\n\n    tryToConnectToUnsupportedNetwork(){\n        log('network not supported')\n        alert.open('Sorry, we did not support this network')\n    }\n\n    async approve(tokenObject, toAddressPlain) {\n        const {realAddress: forAddress} = await this.checkForENSName(toAddressPlain)\n        const [contractAddress, tokenID] = tokenObject.identity.split(':')\n        const fromAddress = ConnectionStore.getUserIdentity()\n        if(stringCompare(fromAddress, forAddress)) throw Error('THE_SAME_ADDRESS_ERROR')\n\n        const Contract = new SmartContract({\n            address: contractAddress\n        })\n        const trnResult = await Contract.approve(forAddress, tokenID)\n        if(!trnResult) throw Error('ALREADY_APPROVED')\n        return trnResult\n    }\n\n    async isApproved(tokenObject){\n        const [contractAddress, tokenID] = tokenObject.identity.split(':')\n        const Contract = new SmartContract({\n            address: contractAddress\n        })\n        const approvedFor = await Contract.getApproved(tokenID)\n        return approvedFor && stringCompare(approvedFor, ConnectionStore.getUserIdentity())\n    }\n}\n\nexport default EVM","/*\n* Storage for selected in rarible provider like:\n* 'injected' - for MetaMask\n* 'walletConnect' - for walletConnect\n* */\n\nconst storeName = 'saved_provider'\n\nexport default {\n    getValue() {\n        return localStorage.getItem(storeName) || undefined\n    },\n    setValue(value) {\n        localStorage.setItem(storeName, value || '')\n    }\n}","export default {\n    initializing: 'initializing',\n    connecting: 'connecting',\n    connected: 'connected',\n    disconnected: 'disconnected'\n}","<template>\n  <div class=\"toggle\" :class=\"{active: props.modelValue}\">\n    <div class=\"toggle__icon\" @click=\"change\"></div>\n    <div class=\"toggle__text\" @click=\"change\"><slot></slot></div>\n  </div>\n</template>\n\n<script setup>\n    const props = defineProps(['modelValue'])\n    const emits = defineEmits(['update:modelValue'])\n\n    const change = () => emits('update:modelValue', !props.modelValue)\n</script>","import script from \"./Toggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Toggle.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"sketch\">\n    <div class=\"sketch__logo\">\n      <router-link :to=\"{name: 'Gallery'}\">\n        <svg viewBox=\"0 0 98 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15.7149 0V21.8527H13.71V18.7898C13.081 19.8304 12.2456 20.6256 11.2039 21.1754C10.1818 21.7251 9.02207 22 7.72478 22C6.27024 22 4.95329 21.6662 3.77394 20.9987C2.59458 20.3311 1.67075 19.3985 1.00245 18.2008C0.334151 17.0031 0 15.6386 0 14.1071C0 12.5756 0.334151 11.2111 1.00245 10.0134C1.67075 8.81571 2.59458 7.8929 3.77394 7.24498C4.95329 6.57742 6.27024 6.24364 7.72478 6.24364C8.98276 6.24364 10.113 6.5087 11.1154 7.03882C12.1375 7.54931 12.9729 8.30522 13.6216 9.30656V0H15.7149ZM7.90168 20.1446C8.98276 20.1446 9.95573 19.8992 10.8206 19.4083C11.7051 18.8978 12.3931 18.1812 12.8845 17.2584C13.3955 16.3356 13.651 15.2851 13.651 14.1071C13.651 12.9291 13.3955 11.8786 12.8845 10.9558C12.3931 10.033 11.7051 9.32619 10.8206 8.83534C9.95573 8.32485 8.98276 8.06961 7.90168 8.06961C6.80095 8.06961 5.80833 8.32485 4.92381 8.83534C4.05895 9.32619 3.37099 10.033 2.85994 10.9558C2.36854 11.8786 2.12284 12.9291 2.12284 14.1071C2.12284 15.2851 2.36854 16.3356 2.85994 17.2584C3.37099 18.1812 4.05895 18.8978 4.92381 19.4083C5.80833 19.8992 6.80095 20.1446 7.90168 20.1446Z\" fill=\"#555\"></path>\n          <path d=\"M27.8839 22C26.3901 22 25.0436 21.6662 23.8446 20.9987C22.6456 20.3115 21.7021 19.369 21.0142 18.1714C20.3262 16.9737 19.9822 15.6189 19.9822 14.1071C19.9822 12.5953 20.3262 11.2405 21.0142 10.0428C21.7021 8.84516 22.6456 7.91254 23.8446 7.24498C25.0436 6.57742 26.3901 6.24364 27.8839 6.24364C29.3778 6.24364 30.7242 6.57742 31.9232 7.24498C33.1222 7.91254 34.0559 8.84516 34.7242 10.0428C35.4121 11.2405 35.7561 12.5953 35.7561 14.1071C35.7561 15.6189 35.4121 16.9737 34.7242 18.1714C34.0559 19.369 33.1222 20.3115 31.9232 20.9987C30.7242 21.6662 29.3778 22 27.8839 22ZM27.8839 20.1446C28.9847 20.1446 29.9675 19.8992 30.8323 19.4083C31.7168 18.8978 32.4048 18.1812 32.8962 17.2584C33.3876 16.3356 33.6333 15.2851 33.6333 14.1071C33.6333 12.9291 33.3876 11.8786 32.8962 10.9558C32.4048 10.033 31.7168 9.32619 30.8323 8.83534C29.9675 8.32485 28.9847 8.06961 27.8839 8.06961C26.7832 8.06961 25.7906 8.32485 24.9061 8.83534C24.0412 9.32619 23.3532 10.033 22.8422 10.9558C22.3508 11.8786 22.1051 12.9291 22.1051 14.1071C22.1051 15.2851 22.3508 16.3356 22.8422 17.2584C23.3532 18.1812 24.0412 18.8978 24.9061 19.4083C25.7906 19.8992 26.7832 20.1446 27.8839 20.1446Z\" fill=\"#555\"></path>\n          <path d=\"M58.4863 1.23706V21.8529H54.5649L44.275 9.33613V21.8529H39.5576V1.23706H43.5085L53.7689 13.7538V1.23706H58.4863Z\" fill=\"#000\"></path>\n          <path d=\"M68.1457 5.06571V10.5142H77.6985V14.3428H68.1457V21.8529H63.3693V1.23706H78.9663V5.06571H68.1457Z\" fill=\"#000\"></path>\n          <path d=\"M86.619 5.12461H80.0146V1.23706H97.9998V5.12461H91.3954V21.8529H86.619V5.12461Z\" fill=\"#000\"></path></svg>\n      </router-link>\n    </div>\n    <div class=\"sketch__header\">\n      <div class=\"header\">\n        <div>\n          <!--<span class=\"header__return\">\n            <span>\n              <svg viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.73633 13.5039C7.01462 13.7722 7.45776 13.7642 7.72611 13.4859C7.99447 13.2076 7.98641 12.7645 7.70812 12.4961L6.73633 13.5039ZM1 7L0.514105 6.49611C0.377288 6.62804 0.3 6.80994 0.3 7C0.3 7.19007 0.377288 7.37196 0.514105 7.50389L1 7ZM7.70812 1.50389C7.98641 1.23554 7.99447 0.792396 7.72611 0.514105C7.45776 0.235814 7.01462 0.227757 6.73633 0.496109L7.70812 1.50389ZM17 7.7C17.3866 7.7 17.7 7.3866 17.7 7C17.7 6.6134 17.3866 6.3 17 6.3L17 7.7ZM7.70812 12.4961L1.48589 6.49611L0.514105 7.50389L6.73633 13.5039L7.70812 12.4961ZM1.48589 7.50389L7.70812 1.50389L6.73633 0.496109L0.514105 6.49611L1.48589 7.50389ZM1 7.7L17 7.7L17 6.3L1 6.3L1 7.7Z\"></path></svg>\n            </span>\n            <span>\n              Return\n            </span>\n          </span>-->\n        </div>\n        <div>\n          <div class=\"header__right\">\n            <div>\n              <div class=\"search box\" v-show=\"route.name === 'Gallery'\">\n                <input type=\"text\" class=\"input\" v-model=\"searchInput\" placeholder=\"Search NFT or collection\">\n                <span class=\"search__icon\">\n                  <svg viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M21.5 21.5L15.5 15.5M17.5 10.5C17.5 14.366 14.366 17.5 10.5 17.5C6.63401 17.5 3.5 14.366 3.5 10.5C3.5 6.63401 6.63401 3.5 10.5 3.5C14.366 3.5 17.5 6.63401 17.5 10.5Z\" stroke-width=\"1.75\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\n                </span>\n              </div>\n            </div>\n            <div>\n              <div class=\"identity box\" v-if=\"connection.userIdentity\">\n                <a\n                  class=\"identity__wallet\"\n                  target=\"_blank\"\n                  :href=\"getExplorerLink('account', connection.userIdentity)\"\n                >\n                  <div v-text=\"userIdentityShort\"></div>\n                  <div v-text=\"connection.userNetworkName || ''\"></div>\n                </a>\n                <div class=\"identity__logout\" @click=\"logout\">\n                  <svg viewBox=\"0 0 24 24\"><path d=\"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z\"></path></svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"sketch__nav\">\n      <router-link\n        v-if=\"route.name !== 'Gallery'\"\n        :to=\"{name: 'Gallery'}\"\n      >\n        <span class=\"header__return\">\n          <span>\n            <svg viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.73633 13.5039C7.01462 13.7722 7.45776 13.7642 7.72611 13.4859C7.99447 13.2076 7.98641 12.7645 7.70812 12.4961L6.73633 13.5039ZM1 7L0.514105 6.49611C0.377288 6.62804 0.3 6.80994 0.3 7C0.3 7.19007 0.377288 7.37196 0.514105 7.50389L1 7ZM7.70812 1.50389C7.98641 1.23554 7.99447 0.792396 7.72611 0.514105C7.45776 0.235814 7.01462 0.227757 6.73633 0.496109L7.70812 1.50389ZM17 7.7C17.3866 7.7 17.7 7.3866 17.7 7C17.7 6.6134 17.3866 6.3 17 6.3L17 7.7ZM7.70812 12.4961L1.48589 6.49611L0.514105 7.50389L6.73633 13.5039L7.70812 12.4961ZM1.48589 7.50389L7.70812 1.50389L6.73633 0.496109L0.514105 6.49611L1.48589 7.50389ZM1 7.7L17 7.7L17 6.3L1 6.3L1 7.7Z\"></path></svg>\n          </span>\n          <span>Back</span>\n        </span>\n      </router-link>\n      <router-link\n        class=\"btn sketch__nav-item\"\n        exact-active-class=\"active\"\n        v-else\n        :to=\"{name: 'MintPage'}\"\n      >\n        Mint new NFT\n      </router-link>\n\n      <ToggleElement\n        v-if=\"route.name === 'Gallery'\"\n        v-model=\"isBundleMode\"\n      >\n        Choose NFT for bundle\n      </ToggleElement>\n      <div></div>\n      <div></div>\n    </div>\n    <div class=\"sketch__main\" :class=\"$attrs.class\">\n      <slot></slot>\n    </div>\n    <div class=\"sketch__footer\">\n      © 2022 doNFT, All Rights Reserved.\n    </div>\n  </div>\n</template>\n\n<script>\n    export default {\n        inheritAttrs: false\n    }\n</script>\n<script setup>\n    import {useStore} from \"@/store/main\";\n    import {storeToRefs} from \"pinia\";\n    import {ConnectionStore} from '@/crypto/helpers'\n    import {useRoute} from \"vue-router\";\n    import {ref} from \"vue\";\n    import ToggleElement from '@/components/UI/Toggle'\n\n    const store = useStore()\n    const {\n        connection,\n        userIdentityShort,\n        getExplorerLink,\n        isBundleMode,\n        searchInput\n    } = storeToRefs(store);\n\n    const logout = async () => {\n        await ConnectionStore.logOut()\n    }\n\n    const route = useRoute()\n</script>","import script from \"./Sketch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Sketch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const computeTokenImgStyle = (img = null) => {\n    const styles = {}\n    if(img) styles.background = `url(${img})no-repeat center/contain`\n    return styles\n}","import {reactive} from \"vue\";\n\nconst TrnView = reactive({\n    active: false,\n    title: '',\n    hash: null,\n    open({hash = '', title = 'Transaction completed'}){\n        this.title = title\n        this.hash = hash\n        this.active = true\n        return this\n    },\n    close(){\n        this.active = false\n        if(typeof this.closeTrigger === 'function') {\n            this.closeTrigger()\n            this.closeTrigger = null\n        }\n    },\n    closeTrigger: null,\n    onClose(trigger){\n        this.closeTrigger = trigger\n    }\n})\n\nexport default TrnView","<template>\n  <div\n    class=\"token\"\n    :class=\"{selected: isSelected, token_na:!isAvailable}\"\n    @click=\"choose\"\n  >\n    <div class=\"token__img\" :style=\"computeTokenImgStyle(token.image)\"></div>\n    <div class=\"token__name\" v-text=\"token.name\"></div>\n    <div class=\"token__buy btn\" v-if=\"token.isForBuy\" @click=\"mint\">Mint</div>\n    <LoaderElement v-if=\"isLoading\" class=\"absolute with-bg\">Minting...</LoaderElement>\n  </div>\n</template>\n\n<script setup>\n    import {computeTokenImgStyle} from \"@/utils/styles\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import alert from \"@/utils/alert\";\n    import LoaderElement from '@/components/UI/Loader'\n    import {ref} from \"vue\";\n    import TrnView from \"@/utils/TrnView\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n\n    const props = defineProps({\n        token: Object,\n        isSelected: {\n            type: Boolean,\n            default: false\n        },\n        isAvailable: {\n            type: Boolean,\n            default: true\n        }\n    })\n    const emits = defineEmits(['choose'])\n    const choose = () => {\n        if(!props.token.isForBuy && props.isAvailable) emits('choose')\n    }\n    const isLoading = ref(false)\n    const mint = async () => {\n        try{\n            isLoading.value = true\n            const {transactionHash} = await AppConnector.connector.mintTestToken(props.token)\n            TrnView\n                .open({hash: transactionHash})\n                .onClose(async () => {\n                    await AppConnector.connector.updateContractTokensList([props.token.contractAddress])\n                })\n        }\n        catch (e) {\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n</script>\n","import script from \"./Token.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Token.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"contract\">\n    <div class=\"contract__name\" v-text=\"contract.name\"></div>\n    <div class=\"contract__tokens\" :class=\"{loading: contract.isUpdating}\" v-if=\"tokensView.length\">\n      <LoaderElement class=\"contract\" v-if=\"contract.isUpdating\">Loading...</LoaderElement>\n      <template v-else>\n        <TokenElement\n          v-for=\"token in tokensView\"\n          :token=\"token\"\n          :isSelected=\"selectedTokens.includes(token.identity)\"\n          :isAvailable=\"!notAvailable.includes(token.identity)\"\n          @choose=\"chooseToken(token, contract)\"\n        />\n      </template>\n    </div>\n    <template v-else>\n      Tokens from this collection were not found. They will appear here after the bundle is minted.\n    </template>\n  </div>\n</template>\n\n<script setup>\n    import TokenElement from '@/components/gallery/Token'\n    import LoaderElement from '@/components/UI/Loader'\n    import {computed} from \"vue\";\n    import {useStore} from \"@/store/main\";\n\n    const props = defineProps({\n        contract: {\n            type: Object,\n            required: true\n        },\n        loading: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        selectedTokens: {\n            type: Array,\n            default: []\n        },\n        tokens: {\n            type: Array,\n            default: []\n        },\n        byAvailable: {\n            type: Boolean,\n            default: false\n        },\n        notAvailable: {\n            type: Array,\n            required: false,\n            default: []\n        }\n    })\n    const emits = defineEmits(['chooseToken'])\n    const chooseToken = (...props) => emits('chooseToken', ...props)\n    const store = useStore()\n\n    const tokensView = computed(() => {\n        // return (props.contract.tokens.length || !props.byAvailable)? props.contract.tokens : store.getShopTokens(props.contract.type, props.contract.address)\n        return [...props.contract.tokens, ...store.getShopTokens(props.contract.type, props.contract.address)]\n    })\n</script>\n","import script from \"./Contract.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Contract.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"choose-assets\">\n    <template v-if=\"step === 'select'\">\n      <div class=\"preview__sub-title\">\n        Choose effect\n      </div>\n      <div class=\"preview__modifiers\">\n\n        <ContractElement\n          v-for=\"contract in preview.modifiers\"\n          :contract=\"contract\"\n          :selectedTokens=\"selected? [selected.identity] : []\"\n          :byAvailable=\"true\"\n          @chooseToken=\"chooseToken\"\n        />\n\n      </div>\n      <div class=\"preview__controls\">\n        <span></span>\n        <div\n          class=\"btn\"\n          v-show=\"selected\"\n          @click=\"confirm\"\n        >Apply</div>\n      </div>\n    </template>\n    <LoaderElement v-if=\"applying\" class=\"absolute with-bg\">Applying...</LoaderElement>\n  </div>\n</template>\n\n<script setup>\nimport {ref} from \"vue\"\nimport {useStore} from \"@/store/main\"\nimport {storeToRefs} from \"pinia\"\nimport ContractElement from '@/components/gallery/Contract'\nimport LoaderElement from '@/components/UI/Loader'\nimport alert from \"@/utils/alert\"\nimport {getErrorTextByCode} from \"@/crypto/helpers\"\nimport {useRouter} from \"vue-router\"\n\nconst store = useStore()\nconst {\n    preview,\n    collections\n} = storeToRefs(store);\n\nconst step = ref('select')\nconst selected = ref(null)\nconst chooseToken = (token) => {\n    selected.value = token\n}\n\nconst emits = defineEmits(['close'])\n\nconst applying = ref(false)\nconst router = useRouter()\nconst confirm = () => {\n    try{\n        applying.value = true\n\n        store.saveApplyEffect(preview.value.token, selected.value)\n\n        emits('close')\n\n        router.push({name: 'ApplyPage'})\n    }\n    catch (e) {\n        alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n    }\n    finally {\n        applying.value = false\n    }\n}\n</script>\n","import script from \"./ApplyAssets.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ApplyAssets.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"choose-assets\">\n    <div class=\"preview__sub-title\">\n      Choose assets\n    </div>\n    <div class=\"preview__modifiers\">\n\n      <ContractElement\n        v-for=\"contract in collectionsToChoose\"\n        :contract=\"contract\"\n        :selectedTokens=\"selectedIdentities\"\n        :notAvailable=\"[preview.token.identity]\"\n        :byAvailable=\"true\"\n        @chooseToken=\"chooseToken\"\n      />\n\n    </div>\n    <div class=\"preview__controls\">\n      <span></span>\n      <div\n        class=\"btn\"\n        v-show=\"selected.length\"\n        @click=\"confirm\"\n      >Add</div>\n    </div>\n    <LoaderElement v-if=\"applying\" class=\"absolute with-bg\">Adding...</LoaderElement>\n  </div>\n</template>\n\n<script setup>\nimport {computed, ref} from \"vue\"\nimport {useStore} from \"@/store/main\"\nimport {storeToRefs} from \"pinia\"\nimport ContractElement from '@/components/gallery/Contract'\nimport LoaderElement from '@/components/UI/Loader'\nimport alert from \"@/utils/alert\"\nimport {getErrorTextByCode} from \"@/crypto/helpers\"\nimport {useRouter} from \"vue-router\"\nimport AppConnector from \"@/crypto/AppConnector\";\nimport TrnView from \"@/utils/TrnView\";\n\nconst store = useStore()\nconst {\n    preview,\n    collections\n} = storeToRefs(store);\n\nconst collectionsToChoose = computed(() => collections.value.filter(c => c.address !== preview.value.contract.address))\n\nconst selected = ref([])\nconst selectedIdentities = computed(() => selected.value.map(token => token.identity))\nconst chooseToken = (token) => {\n    if(selected.value.find(t => t.identity === token.identity)) selected.value = selected.value.filter(t => t.identity !== token.identity)\n    else selected.value.push(token)\n}\n\nconst emits = defineEmits(['close'])\n\nconst applying = ref(false)\nconst router = useRouter()\nconst confirm = async () => {\n    try{\n        applying.value = true\n\n        const contractsNeedToUpdate = [preview.value.token.contractAddress, ...selected.value.map(token => token.contractAddress)]\n\n        const {\n            transactionHash: hash,\n        } = await AppConnector.connector.addTokensToBundle(preview.value.token, selected.value)\n\n        TrnView\n            .open({hash})\n            .onClose(async () => {\n                selected.value = []\n                await AppConnector.connector.updateContractTokensList(contractsNeedToUpdate)\n                await AppConnector.connector.getWrappedTokensObjectList(preview.value.token.contractAddress, preview.value.token.id)\n            })\n    }\n    catch (e) {\n        alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n    }\n    finally {\n        applying.value = false\n    }\n}\n</script>\n","import script from \"./AddAssets.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddAssets.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"token-data__visual\">\n    <template v-if=\"isAttributesAvailable\">\n      <div>Age:</div>\n      <div>\n        <input type=\"range\" :min=\"0\" :max=\"Object.keys(Traits.age).length - 1\" v-model=\"tokenAge\">\n        {{ ageSelected }}\n      </div>\n      <div>Mood:</div>\n      <div>\n        <input type=\"range\" :min=\"1\" :max=\"Object.keys(Traits.mood).length\" v-model=\"tokenMood\">\n        {{ moodSelected }}\n      </div>\n    </template>\n    <template v-for=\"prop in viewProps\">\n      <div v-text=\"prop.name + ':'\"></div>\n      <div v-text=\"prop.value\"></div>\n    </template>\n    <template v-if=\"haveAttributesChanges\">\n      <div class=\"btn\" @click=\"saveNewAttributes\">Save</div>\n      <div>\n        <div class=\"btn btn_inline red\" @click=\"cancelAttributesChange\">Cancel</div>\n      </div>\n    </template>\n  </div>\n  <LoaderElement v-if=\"isLoading\" class=\"absolute with-bg\">Saving...</LoaderElement>\n</template>\n\n<script setup>\n    import {computed, nextTick, watch} from \"vue\";\n    import {ref} from \"vue\";\n    import {Traits} from \"@/crypto/helpers/Token\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import alert from \"@/utils/alert\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n    import {CollectionType} from \"@/utils/collection\";\n    import LoaderElement from '@/components/UI/Loader'\n    import {useStore} from \"@/store/main\";\n\n    const store = useStore()\n\n    const propKeys = {\n        name: 'Name',\n        description: 'Description',\n        link: 'Outer link'\n    }\n\n    const props = defineProps(['token'])\n    const emits = defineEmits(['setTempImage'])\n\n    const isAttributesAvailable = computed(() => {\n        const contract = store.findContractObject(props.token.contractAddress)\n        return CollectionType.isBundle(contract.type)\n    })\n\n    const age = props.token.attributes.find(attribute => attribute.trait_type === 'age')?.value || Traits.age.baby\n    const mood = props.token.attributes.find(attribute => attribute.trait_type === 'mood')?.value || Traits.mood.general\n\n    const tokenAge = ref(age)\n    const tokenMood = ref(mood)\n\n    const ageSelected = computed(() => {\n        return Object.entries(Traits.age).find(([name, id]) => id === +tokenAge.value)[0]\n    })\n\n    const moodSelected = computed(() => {\n        return Object.entries(Traits.mood).find(([name, id]) => id === +tokenMood.value)[0]\n    })\n\n    const haveAttributesChanges = ref(false)\n\n    // let dontApplyChanges = false\n    watch([tokenAge, tokenMood], async () => {\n        // if(dontApplyChanges) {\n        //     dontApplyChanges = false\n        //     return\n        // }\n        haveAttributesChanges.value = true\n\n        // emits('setTempImage', '/img/characters/' + AppConnector.connector.generateNewTokenImage({age: tokenAge.value, mood: tokenMood.value}))\n        // const {tempURL} = await AppConnector.connector.generateNewTokenImage({age: tokenAge.value, mood: tokenMood.value}, props.token)\n        // emits('setTempImage', tempURL)\n    })\n\n    const isLoading = ref(false)\n\n    const saveNewAttributes = async () => {\n        isLoading.value = true\n        try{\n            await AppConnector.connector.saveNewAttributes(props.token, {age: tokenAge.value, mood: tokenMood.value})\n            await nextTick(() => {\n                haveAttributesChanges.value = false\n            })\n        }\n        catch (e) {\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n\n    const cancelAttributesChange = () => {\n        // dontApplyChanges = true\n        tokenAge.value = props.token.attributes.find(attribute => attribute.trait_type === 'age')?.value || Traits.age.baby\n        tokenMood.value = props.token.attributes.find(attribute => attribute.trait_type === 'mood')?.value || Traits.mood.general\n        // emits('setTempImage', null)\n        nextTick(() => {\n            haveAttributesChanges.value = false\n        })\n    }\n\n    const viewProps = computed(() => {\n        return [...props.token.fieldsForView].map(prop => {\n            prop.name = propKeys[prop.key]\n            return prop\n        })\n    })\n</script>\n","import script from \"./InfoVisual.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InfoVisual.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"token-data\">\n    <div>\n      <InfoVisual :token=\"props.token\" @setTempImage=\"setTempImage\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\n    import InfoVisual from '@/components/preview/InfoVisual'\n    const props = defineProps(['token'])\n    const emits = defineEmits(['setTempImage'])\n\n    const setTempImage = (image) => emits('setTempImage', image)\n</script>\n","import script from \"./Info.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Info.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./InputElement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InputElement.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"send-form\">\n    <div class=\"preview__sub-title\">\n      Enter wallet address\n    </div>\n    <InputElement v-model=\"address\" placeholder=\"Address...\"/>\n    <div class=\"send-form__actions\">\n      <span class=\"btn\" @click=\"send\">Send</span>\n    </div>\n    <LoaderElement v-if=\"isSending\" class=\"absolute with-bg\">Sending...</LoaderElement>\n  </div>\n</template>\n\n<script setup>\n    import InputElement from '@/components/UI/InputElement'\n    import LoaderElement from '@/components/UI/Loader'\n    import {ref} from \"vue\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import TrnView from \"@/utils/TrnView\";\n    import alert from \"@/utils/alert\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n\n    const address = ref('')\n\n    const emits = defineEmits(['close'])\n\n    const props = defineProps(['token'])\n\n    const isSending = ref(false)\n    const send = async () => {\n        try{\n            isSending.value = true\n            const {transactionHash: hash} = await AppConnector.connector.sendNFT(props.token, address.value)\n            TrnView\n                .open({hash})\n                .onClose(async () => {\n                    emits('close')\n                    await AppConnector.connector.updateContractTokensList([props.token.contractAddress])\n                })\n        }\n        catch (e) {\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isSending.value = false\n        }\n    }\n</script>\n","import script from \"./Send.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Send.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <span class=\"icon\">\n    <svg viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" /></svg>\n  </span>\n</template>","import { render } from \"./Copy.vue?vue&type=template&id=3ebf876c\"\nconst script = {}\n\nimport exportComponent from \"/Library/WebServer/Documents/doprojects/da/frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <span class=\"icon\">\n    <svg viewBox=\"0 0 24 24\">\n      <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\n    </svg>\n  </span>\n</template>","import { render } from \"./CopySuccess.vue?vue&type=template&id=0543cceb\"\nconst script = {}\n\nimport exportComponent from \"/Library/WebServer/Documents/doprojects/da/frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <span class=\"icon\">\n    <svg viewBox=\"0 0 30 30\"><path d=\"M 25.980469 2.9902344 A 1.0001 1.0001 0 0 0 25.869141 3 L 20 3 A 1.0001 1.0001 0 1 0 20 5 L 23.585938 5 L 13.292969 15.292969 A 1.0001 1.0001 0 1 0 14.707031 16.707031 L 25 6.4140625 L 25 10 A 1.0001 1.0001 0 1 0 27 10 L 27 4.1269531 A 1.0001 1.0001 0 0 0 25.980469 2.9902344 z M 6 7 C 4.9069372 7 4 7.9069372 4 9 L 4 24 C 4 25.093063 4.9069372 26 6 26 L 21 26 C 22.093063 26 23 25.093063 23 24 L 23 14 L 23 11.421875 L 21 13.421875 L 21 16 L 21 24 L 6 24 L 6 9 L 14 9 L 16 9 L 16.578125 9 L 18.578125 7 L 16 7 L 14 7 L 6 7 z\"></path></svg>\n  </span>\n</template>","import { render } from \"./NewTab.vue?vue&type=template&id=8cdeea46\"\nconst script = {}\n\nimport exportComponent from \"/Library/WebServer/Documents/doprojects/da/frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import Copy from '@/components/UI/icons/Copy'\nimport CopySuccess from '@/components/UI/icons/CopySuccess'\nimport NewTab from '@/components/UI/icons/NewTab'\n\nconst Icons = {\n    copy: Copy,\n    copySuccess: CopySuccess,\n    newTab: NewTab\n}\n\nexport default Icons","<template>\n  <component :is=\"isCopied? Icons.copySuccess : Icons.copy\" title=\"Copy address\" @click=\"copyAddress\"/>\n</template>\n\n<script setup>\n    import copy from \"copy-to-clipboard\";\n    import {ref} from \"vue\";\n    import Icons from \"@/components/UI/icons\";\n\n    const prop = defineProps(['value'])\n\n    const isCopied = ref(false)\n    const copyAddress = () => {\n        isCopied.value = copy(prop.value)\n        setTimeout(() => {\n            isCopied.value = false\n        }, 3000)\n    }\n</script>","import script from \"./CopyIcon.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CopyIcon.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"preview\"\n       v-if=\"preview.token\"\n       :class=\"[preview.isOpen? 'active':'close']\"\n       @click=\"close\"\n  >\n    <div class=\"preview__content\" @click.stop>\n      <div class=\"preview__title\">\n        <div class=\"preview__close\" @click=\"close\">\n          <svg viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.73633 13.5039C7.01462 13.7722 7.45776 13.7642 7.72611 13.4859C7.99447 13.2076 7.98641 12.7645 7.70812 12.4961L6.73633 13.5039ZM1 7L0.514105 6.49611C0.377288 6.62804 0.3 6.80994 0.3 7C0.3 7.19007 0.377288 7.37196 0.514105 7.50389L1 7ZM7.70812 1.50389C7.98641 1.23554 7.99447 0.792396 7.72611 0.514105C7.45776 0.235814 7.01462 0.227757 6.73633 0.496109L7.70812 1.50389ZM17 7.7C17.3866 7.7 17.7 7.3866 17.7 7C17.7 6.6134 17.3866 6.3 17 6.3L17 7.7ZM7.70812 12.4961L1.48589 6.49611L0.514105 7.50389L6.73633 13.5039L7.70812 12.4961ZM1.48589 7.50389L7.70812 1.50389L6.73633 0.496109L0.514105 6.49611L1.48589 7.50389ZM1 7.7L17 7.7L17 6.3L1 6.3L1 7.7Z\"></path></svg>\n        </div>\n        <div v-text=\"title\"></div>\n        <div>\n          <div class=\"prop\">\n            <span class=\"prop__name\">\n              Collection:\n            </span>\n            <span class=\"prop__value\">\n              <a target=\"_blank\" :href=\"getExplorerLink('account', preview.token.contractAddress)\" v-text=\"preview.token.contractAddress\"></a>\n              <a target=\"_blank\" :href=\"getExplorerLink('account', preview.token.contractAddress)\">\n                <component :is=\"Icons.newTab\" title=\"Open in explorer\"/>\n              </a>\n              <CopyIcon :value=\"preview.token.contractAddress\"/>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"preview__area\"\n        :class=\"{loading: isPreviewLoading}\"\n      >\n        <div\n          class=\"preview__token\"\n          :style=\"tokenImage\"\n        ></div>\n        <div\n          class=\"preview__inside\"\n          v-if=\"CollectionType.isBundle(preview.contract.type)\"\n        >\n          <div v-for=\"token in preview.token.inner\">\n            <div :style=\"computeTokenImgStyle(token.image)\"></div>\n            <div v-text=\"token.name\"></div>\n            <span\n              class=\"rm\"\n              title=\"Remove from bundle\"\n              v-if=\"CollectionType.isBundle(preview.contract.type)\"\n              @click=\"removeFromBundle(token)\"\n            >\n              <svg viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.5 18L17.5 3M2.5 3L17.5 18\" stroke-width=\"2.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\n            </span>\n          </div>\n        </div>\n        <LoaderElement v-if=\"isPreviewLoading || (CollectionType.isBundle(preview.contract.type) && preview.token.innerLoading)\" class=\"absolute with-bg\"/>\n      </div>\n      <div class=\"preview__nav\">\n        <div class=\"btn\"\n             :class=\"{active: section === 'info'}\"\n             @click=\"changeSection('info')\"\n        >\n          Info\n        </div>\n        <!--<div class=\"btn\"\n             :class=\"{active: section === 'apply', na: !CollectionType.canApplyEffect(preview.contract.type)}\"\n             @click=\"CollectionType.canApplyEffect(preview.contract.type)? changeSection('apply') : null\"\n        >\n          Apply effect\n        </div>-->\n        <div class=\"btn\"\n             v-if=\"CollectionType.isBundle(preview.contract.type) && preview.token.inner.length\"\n             :class=\"{active: section === 'add'}\"\n             @click=\"changeSection('add')\"\n        >\n          Add assets\n        </div>\n        <div class=\"btn\"\n             :class=\"{active: section === 'send'}\"\n             @click=\"changeSection('send')\"\n        >\n          Send\n        </div>\n        <div class=\"btn\"\n             v-if=\"CollectionType.isBundle(preview.contract.type) && preview.token.inner && preview.token.inner.length\"\n             @click=\"unwrap\"\n        >\n          Unbundle\n        </div>\n        <a class=\"btn\"\n           v-if=\"marketPlaceLink\"\n           :href=\"marketPlaceLink\"\n           target=\"_blank\"\n        >\n          View on Opensea\n          <span class=\"icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\"><path d=\"M 25.980469 2.9902344 A 1.0001 1.0001 0 0 0 25.869141 3 L 20 3 A 1.0001 1.0001 0 1 0 20 5 L 23.585938 5 L 13.292969 15.292969 A 1.0001 1.0001 0 1 0 14.707031 16.707031 L 25 6.4140625 L 25 10 A 1.0001 1.0001 0 1 0 27 10 L 27 4.1269531 A 1.0001 1.0001 0 0 0 25.980469 2.9902344 z M 6 7 C 4.9069372 7 4 7.9069372 4 9 L 4 24 C 4 25.093063 4.9069372 26 6 26 L 21 26 C 22.093063 26 23 25.093063 23 24 L 23 14 L 23 11.421875 L 21 13.421875 L 21 16 L 21 24 L 6 24 L 6 9 L 14 9 L 16 9 L 16.578125 9 L 18.578125 7 L 16 7 L 14 7 L 6 7 z\"></path></svg>\n          </span>\n        </a>\n      </div>\n      <div class=\"preview__section\">\n        <ApplyAssets v-if=\"section === 'apply'\" @close=\"close\"/>\n        <AddAssetSection v-else-if=\"section === 'add'\" @close=\"close\"/>\n        <SendSection v-else-if=\"section === 'send'\" :token=\"preview.token\" @close=\"close\"/>\n        <InfoSection v-else :token=\"preview.token\" @setTempImage=\"setTempImage\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import {useStore} from \"@/store/main\";\n  import {storeToRefs} from \"pinia\";\n  import {computeTokenImgStyle} from \"@/utils/styles\";\n  import ApplyAssets from '@/components/preview/ApplyAssets'\n  import AddAssetSection from '@/components/preview/AddAssets'\n  import InfoSection from '@/components/preview/Info'\n  import SendSection from '@/components/preview/Send'\n  import LoaderElement from '@/components/UI/Loader'\n  import {computed, ref} from \"vue\";\n  import Icons from \"@/components/UI/icons\";\n  import CopyIcon from \"@/components/UI/CopyIcon\";\n  import {CollectionType} from \"@/utils/collection\";\n  import confirm from \"@/utils/confirm\";\n\n  import {Networks, ConnectionStore, getErrorTextByCode, ErrorList} from \"@/crypto/helpers\"\n  import AppConnector from \"@/crypto/AppConnector\";\n  import TrnView from \"@/utils/TrnView\";\n  import alert from \"@/utils/alert\";\n\n  const store = useStore()\n  const {\n      preview,\n      getExplorerLink\n  } = storeToRefs(store);\n\n  const tokenTempImage = ref(null)\n  const setTempImage = image => tokenTempImage.value = image\n  const tokenImage = computed(() => {\n      return tokenTempImage.value && computeTokenImgStyle(tokenTempImage.value) || computeTokenImgStyle(preview.value.token.image)\n  })\n\n  const title = computed(() => {\n      const collectionName = CollectionType.getCollectionName(preview.value.contract.type)\n      return `${collectionName}: ${preview.value.token.name}`\n  })\n\n  const section = ref('info')   // info, send, apply, add\n  const changeSection = (value) => {\n      section.value = value\n  }\n  const isPreviewLoading = ref(false)\n\n  const unwrap = () => {\n      confirm.open(\n          'Confirm unbundle?',\n          async () => {\n              try{\n                  isPreviewLoading.value = true\n\n                  const {transactionHash: hash} = await AppConnector.connector.unbundleToken(preview.value.token)\n\n                  TrnView\n                      .open({hash})\n                      .onClose(async () => {\n                          close()\n                          await AppConnector.connector.fetchCollectionsWithTokens()\n                      })\n              }\n              catch (e) {\n                  alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n              }\n              finally {\n                  isPreviewLoading.value = false\n              }\n          }\n      )\n  }\n\n  const removeFromBundle = (token) => {\n      const canRemove = AppConnector.connector.isRemoveFromBundleAllow(token)\n      if(!canRemove){\n          alert.open(getErrorTextByCode(ErrorList.HAVE_SPECIAL_ROLE), 'Error:')\n          return\n      }\n\n      confirm.open(\n          `Remove ${token.name} from bundle?`,\n          async () => {\n              try{\n                  isPreviewLoading.value = true\n                  const contractsNeedToUpdate = [preview.value.token.contractAddress, token.contractAddress]\n\n                  const {\n                      transactionHash: hash,\n                  } = await AppConnector.connector.removeAssetsFromBundle(preview.value.token, token)\n\n                  TrnView\n                      .open({hash})\n                      .onClose(async () => {\n                          await AppConnector.connector.updateContractTokensList(contractsNeedToUpdate)\n                          await AppConnector.connector.getWrappedTokensObjectList(preview.value.token.contractAddress, preview.value.token.id)\n                      })\n              }\n              catch (e) {\n                  alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n              }\n              finally {\n                  isPreviewLoading.value = false\n              }\n          }\n      )\n  }\n\n  const marketPlaceLink = computed(() => {\n      const {marketplaceExplorer} = Networks.getData(ConnectionStore.getNetwork().name)\n      return marketplaceExplorer && marketplaceExplorer(...preview.value.token.identity.split(':')) || ''\n  })\n\n  const close = () => {\n      store.closePreview()\n  }\n</script>\n","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Sketch class=\"gallery\">\n    <LoaderElement class=\"collections\" v-if=\"isCollectionsLoading\">Loading...</LoaderElement>\n    <template v-else>\n      <ContractElement\n        v-for=\"collection in getSearchCollectionsAndTokens\"\n        :contract=\"collection\"\n        :byAvailable=\"true\"\n        :selectedTokens=\"selectedForBundle.identities\"\n        @chooseToken=\"chooseToken\"\n      />\n    </template>\n    <div\n      class=\"gallery__center-btn btn\"\n      v-if=\"isMakeBundleAvailable\"\n      @click=\"makeBundle\"\n    >\n      Make bundle\n    </div>\n    <LoaderElement class=\"fixed with-bg\" v-if=\"isLoading\">Loading...</LoaderElement>\n  </Sketch>\n  <PreviewToken/>\n</template>\n\n<script setup>\n    import {storeToRefs} from \"pinia\";\n    import Sketch from '@/components/UI/Sketch'\n    import PreviewToken from '@/components/preview/Modal'\n    import ContractElement from '@/components/gallery/Contract'\n    import LoaderElement from '@/components/UI/Loader'\n\n    import {useStore} from \"@/store/main\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {log} from \"@/utils/AppLogger\";\n    import {CollectionType} from \"@/utils/collection\";\n    import {useRouter} from \"vue-router\";\n    import {computed, ref, watch} from \"vue\";\n    import alert from \"@/utils/alert\";\n    import TrnView from \"@/utils/TrnView\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n\n    const store = useStore()\n\n    const {\n        isCollectionsLoading,\n        collections,\n        isBundleMode,\n        selectedForBundle,\n        getSearchCollectionsAndTokens\n    } = storeToRefs(store)\n\n    watch(isBundleMode, (newState) => {\n        if(!newState) store.cleanSavedTokensForBundle()\n    })\n\n    const isMakeBundleAvailable = computed(() => {\n        const addedTokensTypes = selectedForBundle.value.identities.map(t => store.findContractObject(t.split(':').shift())?.type).filter(Boolean)\n        return addedTokensTypes.length > 1 && addedTokensTypes.includes(CollectionType.BUNDLE)\n    })\n\n    const chooseToken = async (token, contract) => {\n        if(isBundleMode.value) {\n            const addTokenContract = store.findContractObject(token.contractAddress);\n            if(addTokenContract.type === CollectionType.BUNDLE && !selectedForBundle.value.identities.includes(token.identity)){\n                const isCharacterAlreadyAdded = selectedForBundle.value.identities.map(i => i.split(':').shift()).includes(addTokenContract.address)\n                if(isCharacterAlreadyAdded) alert.open(`You can't add more than one character in bundle`)\n                else store.toggleTokenForBundle(token)\n            }\n            else store.toggleTokenForBundle(token)\n        }\n        else{\n            store.openPreview(token)\n            try{\n                if(CollectionType.isBundle(contract.type)) {\n                    await AppConnector.connector.getWrappedTokensObjectList(token.contractAddress, token.id)\n                }\n            }\n            catch (e) {\n                log(e);\n            }\n        }\n    }\n\n    const router = useRouter()\n\n    const isLoading = ref(false)\n    const makeBundle = async () => {\n        const tokensForBundle = selectedForBundle.value.identities.map(i => store.getTokenWithCollectionByIdentity(i)).filter(Boolean)\n\n        try{\n            isLoading.value = true\n            const contractsNeedToUpdate = [...new Set(tokensForBundle.map(t => t.contract.address))]\n\n            const {\n                transactionHash: hash,\n            } = await AppConnector.connector.createBundle(tokensForBundle)\n\n            store.cleanSavedTokensForBundle()\n\n            TrnView\n                .open({hash})\n                .onClose(() => {\n                    log('contractsNeedToUpdate', contractsNeedToUpdate);\n                    router.push({name: 'Gallery'})\n                    AppConnector.connector.updateContractTokensList(contractsNeedToUpdate)\n                })\n        }\n        catch (e) {\n            log('Bundle', e);\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n</script>\n","import script from \"./GalleryPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GalleryPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Sketch class=\"gallery\">\n    <LoaderElement class=\"collections\" v-if=\"isLoading\">Loading...</LoaderElement>\n    <template v-else-if=\"token\">\n      <div class=\"token-page\">\n        <div class=\"token-page__media\">\n          <div class=\"token-page__img\">\n            <div :style=\"computeTokenImgStyle(token.image)\"></div>\n          </div>\n        </div>\n        <div class=\"token-page__data\">\n          <div class=\"token-page__field\" v-for=\"field in token.fieldsForView\">\n            <div v-text=\"field.key + ':'\"></div>\n            <div v-text=\"field.value\"></div>\n          </div>\n          <div class=\"token-page__actions\">\n            <span class=\"btn\">Unbundle</span>\n          </div>\n        </div>\n        <div class=\"token-page__inside\">\n          <div v-for=\"nft in token.structure\" :key=\"nft.id\" :style=\"computeTokenImgStyle(nft.image)\"></div>\n        </div>\n        <div></div>\n      </div>\n    </template>\n    <template v-else>\n      Token not found\n    </template>\n  </Sketch>\n  <PreviewToken/>\n</template>\n\n<script setup>\n    import Sketch from '@/components/UI/Sketch'\n    import LoaderElement from '@/components/UI/Loader'\n    import ToggleElement from '@/components/UI/Toggle'\n    import PreviewToken from '@/components/preview/Modal'\n\n    import {useStore} from \"@/store/main\";\n    import {useRoute} from \"vue-router\";\n    import {onMounted, ref} from \"vue\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {computeTokenImgStyle} from \"@/utils/styles\";\n\n    const isLoading = ref(true)\n    const token = ref(null)\n    const tokenNotFound = ref(false)\n\n    const route = useRoute()\n    onMounted(async () => {\n        try{\n            const tokenIdentity = `${route.params.contractAddress}:${route.params.tokenID}`\n            token.value = await AppConnector.connector.getTokenByIdentity(tokenIdentity, true, true)\n        }\n        catch (e) {\n            tokenNotFound.value = true\n        }\n        finally {\n            isLoading.value = false\n        }\n    })\n\n    const store = useStore()\n</script>\n","import script from \"./TokenDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TokenDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <LoaderElement class=\"absolute with-bg\">{{ processStatus.code }}</LoaderElement>\n</template>\n\n<script setup>\n    import LoaderElement from '@/components/UI/Loader'\n    import {useStore} from \"@/store/main\";\n    import {storeToRefs} from \"pinia\";\n\n    const store = useStore()\n    const {\n        processStatus\n    } = storeToRefs(store);\n</script>","import script from \"./PageBlockActionLoading.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PageBlockActionLoading.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Sketch class=\"token-page-cover\">\n    <template v-if=\"apply.origin.token && apply.style.token\">\n      <div class=\"sketch__title\">Apply effect</div>\n      <div class=\"token-page\">\n        <div class=\"token-page__media\">\n          <div class=\"token-page__img\">\n            <div :style=\"computeTokenImgStyle(apply.origin.token.image)\"></div>\n          </div>\n        </div>\n        <div class=\"token-page__data\">\n          <div class=\"token-page__field\">\n            <div>Name*</div>\n            <div>\n              <input type=\"text\" class=\"input\" v-model.trim=\"bundleMeta.name\">\n            </div>\n          </div>\n          <div class=\"token-page__field\">\n            <div>External link</div>\n            <div>\n              <input type=\"text\" class=\"input\" v-model.trim=\"bundleMeta.link\">\n            </div>\n          </div>\n          <div class=\"token-page__field\">\n            <div>Description</div>\n            <div>\n              <input type=\"text\" class=\"input\" v-model.trim=\"bundleMeta.description\">\n            </div>\n          </div>\n        </div>\n        <div class=\"token-page__inside\">\n          <div :style=\"computeTokenImgStyle(apply.style.token.image)\"></div>\n        </div>\n        <div>\n          <span\n            class=\"btn\"\n            :class=\"{na: !isSubmitAvailable}\"\n            @click=\"isSubmitAvailable? confirmEffect() : null\"\n          >\n            Confirm effect\n          </span>\n        </div>\n      </div>\n    </template>\n    <LoaderElement class=\"collections\" v-else>Loading...</LoaderElement>\n    <PageBlockActionLoading v-if=\"isLoading\"/>\n  </Sketch>\n</template>\n\n<script setup>\n    import Sketch from '@/components/UI/Sketch'\n    import LoaderElement from '@/components/UI/Loader'\n    import ToggleElement from '@/components/UI/Toggle'\n    import PageBlockActionLoading from '@/components/UI/PageBlockActionLoading'\n\n    import {useStore} from \"@/store/main\";\n    import {computed, onMounted, reactive, ref} from \"vue\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {computeTokenImgStyle} from \"@/utils/styles\";\n    import {storeToRefs} from \"pinia\";\n    import alert from \"@/utils/alert\";\n    import {useRouter} from \"vue-router\";\n    const router = useRouter()\n    import TrnView from \"@/utils/TrnView\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n\n    const store = useStore()\n    const {\n        apply\n    } = storeToRefs(store);\n\n    const isLoading = ref(false)\n\n    const initError = (reason) => {\n        alert.open(`${reason}. You will be redirected to gallery page.`)\n            .onClose(() => {\n                router.replace({name: 'Gallery'})\n            })\n    }\n\n    onMounted(async () => {\n        if(!apply.value.origin.token || !apply.value.style.token){\n            const isRestoreSuccess = store.restoreApplyIdentities()\n            if(isRestoreSuccess){\n                try{\n                    const restoredTokens = await Promise.all([\n                        AppConnector.connector.getTokenByIdentity(apply.value.origin.identity),\n                        AppConnector.connector.getTokenByIdentity(apply.value.style.identity)\n                    ])\n                    store.saveRestoredTokensForApply(restoredTokens.shift(), restoredTokens.shift())\n                }\n                catch (e) {\n                    return initError('Restore token objects error.')\n                }\n            }\n            else return initError('Restore token identities error.')\n        }\n    })\n\n    const bundleMeta = reactive({\n        name: '',\n        link: '',\n        description: '',\n    })\n\n    const isSubmitAvailable = computed(() => {\n        return bundleMeta.name.trim().length && !isLoading.value\n    })\n\n    const confirmEffect = async () => {\n        try{\n            isLoading.value = true\n            let contractsNeedToUpdate = [apply.value.origin.token.contractAddress, apply.value.style.token.contractAddress]\n\n            const {\n                transactionHash: hash,\n                issuedContractAddress\n            } = await AppConnector.connector.applyEffectToToken(bundleMeta, apply.value.origin.token, apply.value.style.token)\n\n            contractsNeedToUpdate.push(issuedContractAddress)\n            contractsNeedToUpdate = [...new Set(contractsNeedToUpdate)]\n\n            TrnView\n                .open({hash})\n                .onClose(() => {\n                    router.push({name: 'Gallery'})\n                    store.cleanSavedTokensForApply()\n                    AppConnector.connector.updateContractTokensList(contractsNeedToUpdate)\n                })\n        }\n        catch (e) {\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n</script>\n","import script from \"./ApplyPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ApplyPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const acceptedTypes = ['image/png', 'image/jpeg']\nconst maxSize = 5\n\nexport function checkFile(file){\n    const type = file.type.toLowerCase()\n    const size = (file.size / 1024 / 1024).toFixed(2)\n\n    if(!acceptedTypes.includes(type)) throw new Error('TYPE')\n    if(size > maxSize) throw new Error('SIZE')\n\n    return true\n}","<template>\n  <div class=\"take-photo\">\n    <div class=\"take-photo__stream\">\n      <video ref=\"video\" playsinline>Video stream not available.</video>\n    </div>\n    <canvas ref=\"canvas\"></canvas>\n    <img v-show=\"lastShot\" :src=\"lastShot\" alt=\"\">\n\n    <div class=\"take-photo__controls\">\n      <template v-if=\"lastShot\">\n        <span @click.prevent=\"useLastShot\">Use this</span>\n        <span @click.prevent=\"clearShot\">Clear</span>\n      </template>\n      <span v-else-if=\"openCamera\" @click.prevent=\"clickHandle\">Take shot</span>\n    </div>\n  </div>\n</template>\n\n<script setup>\n\nimport {ref, onMounted, onBeforeUnmount, watch, nextTick} from \"vue\"\nconst emit = defineEmits(['fireError', 'setMedia'])\nconst lastShot = ref(null)\nconst lastBlob = ref(null)\nconst clearShot = () => {\n  lastShot.value = null\n  lastBlob.value = null\n  emit('setMedia', {photo: null, file: null})\n}\nwatch(lastShot, (_, prevURL) => {\n  if(prevURL) URL.revokeObjectURL(prevURL)\n})\n\nconst openCamera = ref(false)\n\nconst video = ref(null)\nconst canvas = ref(null)\n\nlet mediaSize = 0\nlet longerSide = null\n\nconst startRecord = async () => {\n  try{\n    lastShot.value = null\n    video.value.srcObject = await navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n    video.value.play()\n    openCamera.value = true\n  }\n  catch (e){\n    emit('fireError', 'MEDIA_NOT_ALLOWED')\n  }\n}\n\nconst takePhoto = () => {\n  if(canvas.value && mediaSize){\n    canvas.value.width = mediaSize\n    canvas.value.height = mediaSize\n\n    const context = canvas.value.getContext('2d')\n    if(longerSide === 'same'){\n      context.drawImage(video.value, 0, 0, mediaSize, mediaSize, 0, 0, mediaSize, mediaSize)\n    }\n    else if(longerSide === 'width'){\n      context.drawImage(video.value, Math.floor((video.value.videoWidth - mediaSize) / 2), 0, mediaSize, mediaSize, 0, 0, mediaSize, mediaSize)\n    }\n    else {\n      context.drawImage(video.value, 0, Math.floor((video.value.videoHeight - mediaSize) / 2), mediaSize, mediaSize, 0, 0, mediaSize, mediaSize)\n    }\n\n    canvas.value.toBlob(blob => {\n      lastShot.value = URL.createObjectURL(blob)\n      lastBlob.value = blob\n    })\n  }\n}\n\nconst useLastShot = () => {\n  emit('setMedia', {photo: lastShot.value, file: lastBlob.value})\n}\n\nconst canPlayListener = (e) => {\n  if(video.value.videoHeight < video.value.videoWidth){\n    longerSide = 'width'\n    mediaSize = video.value.videoHeight\n  }\n  else{\n    longerSide = 'height'\n    mediaSize = video.value.videoWidth\n  }\n  if(video.value.videoHeight === video.value.videoWidth) longerSide = 'same'\n}\n\nonMounted(() => {\n  video.value.addEventListener('canplay', canPlayListener)\n})\nonBeforeUnmount(() => {\n  video.value.removeEventListener('canplay', canPlayListener)\n})\n\nconst clickHandle = () => {\n  if(openCamera.value) takePhoto()\n  else startRecord()\n}\n\nnextTick().then(() => startRecord())\n\n</script>","import script from \"./TakePhoto.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TakePhoto.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"token-media-loader\">\n    <div\n      class=\"token-media-loader__img\"\n      v-if=\"image\"\n      :style=\"computeTokenImgStyle(image)\"\n    ></div>\n    <div\n      class=\"token-media-loader__selfie\"\n      v-if=\"isTransportSelfie\"\n    >\n\n    </div>\n    <TakePhoto\n      v-if=\"isTransportSelfie\"\n      @fireError=\"($event) => null\"\n      @setMedia=\"setFileFromSelfie\"\n    />\n    <div\n      class=\"token-media-loader__input\"\n      v-else\n      :class=\"{active: !image}\"\n      @click=\"loadFile\"\n    >\n      <div>\n        <svg viewBox=\"0 0 66 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M32.6569 34.2835L26.2926 40.442C25.9025 40.82 25.9025 41.4329 26.2926 41.8105C26.6832 42.1885 27.3165 42.1885 27.7072 41.8105L32.3639 37.3039L32.3638 61H34.3639V37.3039L39.0206 41.8105C39.4113 42.1885 40.0446 42.1885 40.4352 41.8105C40.6578 41.595 40.7535 41.3025 40.7218 41.0209C40.7091 40.906 40.6749 40.7926 40.6198 40.6872C40.5734 40.5989 40.5118 40.5162 40.4352 40.442L34.0709 34.2835C33.6803 33.9055 33.0475 33.9055 32.6569 34.2835Z\" fill-opacity=\"0.5\"></path><path d=\"M54 21C54 9.40186 44.5981 0 33 0C21.4019 0 12 9.40186 12 21C12 21.6747 12.0318 22.342 12.094 23.0004C12.0627 23.0001 12.0314 23 12 23C5.37258 23 0 28.3726 0 35C0 41.6274 5.37258 47 12 47C13.6491 47 15.2205 46.6673 16.6508 46.0655L15.2021 44.4763C14.1968 44.8159 13.1199 45 12 45C6.47715 45 2 40.5229 2 35C2 29.4772 6.47715 25 12 25C12.1279 25 12.2552 25.0024 12.3819 25.0072C13.1076 25.0344 13.8135 25.139 14.4916 25.3129C14.4533 25.1481 14.4173 24.9825 14.3833 24.8162C14.2685 24.2687 14.1974 23.837 14.1246 23.1875C14.0423 22.4697 14 21.7398 14 21C14 10.5063 22.5063 2 33 2C43.4937 2 52 10.5063 52 21C52 21.7398 51.9577 22.4697 51.8755 23.1875C51.7927 23.909 51.6696 24.6183 51.5084 25.3129C52.1865 25.139 52.8924 25.0344 53.6181 25.0072C53.7448 25.0024 53.8721 25 54 25C59.5229 25 64 29.4772 64 35C64 40.5229 59.5229 45 54 45C52.8801 45 51.8032 44.8159 50.7979 44.4763L49.3492 46.0655C50.7795 46.6673 52.3509 47 54 47C60.6274 47 66 41.6274 66 35C66 28.3726 60.6274 23 54 23C53.9686 23 53.9373 23.0001 53.906 23.0004C53.9682 22.342 54 21.6747 54 21Z\" fill-opacity=\"0.5\"></path></svg>\n        <div>Browse to choose a file *</div>\n      </div>\n    </div>\n  </div>\n\n  <ToggleElement v-if=\"isSelfieAvailable\" v-model=\"isTransportSelfie\">\n    {{ isTransportSelfie? 'Make selfie' : 'Load file'}}\n  </ToggleElement>\n</template>\n\n<script setup>\n    import {ref} from \"vue\";\n    import {computeTokenImgStyle} from \"@/utils/styles\";\n    import {checkFile} from \"@/utils/file\";\n    import alert from \"@/utils/alert\";\n    import ToggleElement from '@/components/UI/Toggle'\n    import TakePhoto from '@/components/UI/TakePhoto'\n\n    const isTransportSelfie = ref(false)\n\n    const isSelfieAvailable = +process.env.VUE_APP_IS_SELFIE_AVAILABLE\n\n    const isLoading = ref(false)\n    const image = ref(null)\n    const file = ref(null)\n\n    const loadFile = () => {\n        const input = document.createElement('input')\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/png,image/jpeg');\n        document.getElementById('tempInjectedElements').appendChild(input);\n        input.onchange = (e) => {\n            e.preventDefault()\n            const fileForLoad = e.target.files[0]\n            if(!fileForLoad) return\n\n            try{\n                isLoading.value = true\n                checkFile(fileForLoad)\n                file.value = fileForLoad\n                image.value = URL.createObjectURL(fileForLoad)\n            }\n            catch (e){\n                let message = ''\n                if(e.message === 'TYPE') message = 'This file type is not supported'\n                else if(e.message === 'SIZE') message = 'The file is to large'\n                else message = 'Unnamed error'\n                alert.open(message)\n            }\n            finally {\n                isLoading.value = false\n            }\n        }\n        input.click()\n    }\n\n    const setFileFromSelfie = ({photo, file: fileBlob}) => {\n        image.value = photo\n        file.value = fileBlob\n        isTransportSelfie.value = false\n    }\n\n    defineExpose({\n        image,\n        file\n    })\n</script>","import script from \"./TokenMediaLoader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TokenMediaLoader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Sketch class=\"token-page-cover\">\n    <div class=\"sketch__title\">Create new NFT</div>\n    <div class=\"token-page\">\n      <div class=\"token-page__media\">\n        <div class=\"token-page__img\">\n          <TokenMediaLoader ref=\"TokenMediaLoaderComponent\"/>\n        </div>\n      </div>\n      <div class=\"token-page__data\">\n        <div class=\"token-page__field\">\n          <div>Collection</div>\n          <div>\n            <select class=\"input\" v-model=\"contractAddress\">\n              <option :value=\"null\" disabled>Choose collection</option>\n              <option v-for=\"option in contractOptions\" :key=\"option.address\" :value=\"option.address\" v-text=\"option.name\"></option>\n            </select>\n          </div>\n        </div>\n        <div class=\"token-page__field\">\n          <div>Name*</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.name\">\n          </div>\n        </div>\n        <div class=\"token-page__field\">\n          <div>External link</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.link\">\n          </div>\n        </div>\n        <div class=\"token-page__field\">\n          <div>Description</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.description\">\n          </div>\n        </div>\n      </div>\n      <div></div>\n      <div>\n        <span\n          class=\"btn\"\n          :class=\"{na: !isSubmitAvailable}\"\n          @click=\"isSubmitAvailable? mint() : null\"\n        >\n          Create NFT\n        </span>\n      </div>\n    </div>\n    <PageBlockActionLoading v-if=\"isLoading\"/>\n  </Sketch>\n</template>\n\n<script setup>\n    import Sketch from '@/components/UI/Sketch'\n    import LoaderElement from '@/components/UI/Loader'\n    import PageBlockActionLoading from '@/components/UI/PageBlockActionLoading'\n\n    import TokenMediaLoader from '@/components/UI/TokenMediaLoader'\n\n    import {useStore} from \"@/store/main\";\n    import {computed, onMounted, reactive, ref, watch} from \"vue\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {storeToRefs} from \"pinia\";\n    import alert from \"@/utils/alert\";\n    import {useRouter} from \"vue-router\";\n    const router = useRouter()\n    import TrnView from \"@/utils/TrnView\";\n    import {ConnectionStore, getErrorTextByCode, Networks} from \"@/crypto/helpers\";\n    import {Traits} from \"@/crypto/helpers/Token\";\n\n    const store = useStore()\n    const {\n        collections\n    } = storeToRefs(store);\n\n    const setAvailableCollections = () => {\n        contractOptions.value = collections.value.map(contract => ({\n            name: contract.name,\n            address: contract.address\n        }))\n    }\n\n    watch(collections, setAvailableCollections)\n\n    const isLoading = ref(false)\n\n    const meta = reactive({\n        name: '',\n        link: '',\n        description: '',\n        attributes: [\n            {\n                trait_type: 'age',\n                value: Traits.age.baby\n            },\n            {\n                trait_type: 'mood',\n                value: Traits.mood.general\n            }\n        ]\n    })\n    const contractAddress = ref('')\n    const contractOptions = ref([])\n\n    onMounted(() => {\n        // const {\n        //     testContract,\n        //     effectsContract\n        // } = Networks.getSettings(ConnectionStore.getNetwork().name)\n        // contractAddress.value = testContract\n        // contractOptions.value = [\n        //     {\n        //         name: 'Test collection',\n        //         address: testContract\n        //     },\n        //     {\n        //         name: 'Effect collection',\n        //         address: effectsContract\n        //     }\n        // ]\n        setAvailableCollections()\n    })\n\n    const TokenMediaLoaderComponent = ref(null)\n\n    const isSubmitAvailable = computed(() => {\n        return meta.name.trim().length && !isLoading.value && TokenMediaLoaderComponent.value.file && contractAddress.value.length\n    })\n\n    const mint = async () => {\n        try{\n            isLoading.value = true\n\n            const {\n                transactionHash: hash,\n                issuedContractAddress\n            } = await AppConnector.connector.createNewToken(meta, TokenMediaLoaderComponent.value.file, contractAddress.value)\n\n            TrnView\n                .open({hash})\n                .onClose(() => {\n                    router.push({name: 'Gallery'})\n                    AppConnector.connector.updateContractTokensList([issuedContractAddress])\n                })\n        }\n        catch (e) {\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n</script>\n","import script from \"./MintPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MintPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Sketch class=\"token-page-cover\">\n    <div class=\"sketch__title\">Create bundle</div>\n    <div class=\"token-page\">\n      <div class=\"token-page__media\">\n        <div class=\"token-page__img\">\n          <TokenMediaLoader ref=\"TokenMediaLoaderComponent\"/>\n        </div>\n      </div>\n      <div class=\"token-page__data\">\n        <div class=\"token-page__field\">\n          <div>Name*</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.name\">\n          </div>\n        </div>\n        <div class=\"token-page__field\">\n          <div>External link</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.link\">\n          </div>\n        </div>\n        <div class=\"token-page__field\">\n          <div>Description</div>\n          <div>\n            <input type=\"text\" class=\"input\" v-model.trim=\"meta.description\">\n          </div>\n        </div>\n      </div>\n      <div class=\"token-page__inside\">\n        <div\n          v-for=\"token in selectedForBundle.tokens\"\n          :style=\"computeTokenImgStyle(token.image)\"\n        ></div>\n      </div>\n      <div>\n        <span\n          class=\"btn\"\n          :class=\"{na: !isSubmitAvailable}\"\n          @click=\"isSubmitAvailable? mint() : null\"\n        >\n          Create bundle\n        </span>\n      </div>\n    </div>\n    <PageBlockActionLoading v-if=\"isLoading || selectedForBundle.loading\"/>\n  </Sketch>\n</template>\n\n<script setup>\n    import Sketch from '@/components/UI/Sketch'\n    import LoaderElement from '@/components/UI/Loader'\n    import ToggleElement from '@/components/UI/Toggle'\n    import PageBlockActionLoading from '@/components/UI/PageBlockActionLoading'\n    import {computeTokenImgStyle} from \"@/utils/styles\"\n    import TokenMediaLoader from '@/components/UI/TokenMediaLoader'\n    import {useStore} from \"@/store/main\";\n    import {computed, onMounted, reactive, ref} from \"vue\";\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {storeToRefs} from \"pinia\";\n    import alert from \"@/utils/alert\";\n    import {useRouter} from \"vue-router\";\n    import TrnView from \"@/utils/TrnView\";\n    import {getErrorTextByCode} from \"@/crypto/helpers\";\n    import {log} from \"@/utils/AppLogger\";\n\n    const router = useRouter()\n\n    const store = useStore()\n    const {\n        selectedForBundle\n    } = storeToRefs(store);\n\n    const isLoading = ref(false)\n\n    const meta = reactive({\n        name: '',\n        link: '',\n        description: '',\n    })\n\n    const errorGettingSavedTokens = reason => {\n        alert.open(`${reason}. You will be redirected to gallery page.`)\n            .onClose(() => {\n                router.replace({name: 'Gallery'})\n            })\n    }\n\n    onMounted(async () => {\n        const savedTokenIdentities = await store.restoreSavedTokensForBundle()\n        if(savedTokenIdentities){\n            try{\n                store.changeLoadingTokensForBundleState(true)\n                const tokens = await AppConnector.connector.getTokenListByIdentity(savedTokenIdentities)\n                store.saveTokensForBundle(tokens)\n            }\n            catch (e) {\n                log(e);\n                errorGettingSavedTokens('Error getting tokens for bundle.')\n            }\n            finally {\n                store.changeLoadingTokensForBundleState(false)\n            }\n        }\n        else errorGettingSavedTokens('Tokens for bundle not selected.')\n    })\n\n    const TokenMediaLoaderComponent = ref(null)\n\n    const isSubmitAvailable = computed(() => {\n        return meta.name.trim().length && !isLoading.value && TokenMediaLoaderComponent.value.file\n    })\n\n    const mint = async () => {\n        try{\n            isLoading.value = true\n\n            let contractsNeedToUpdate = selectedForBundle.value.tokens.map(t => t.contractAddress)\n\n            const {\n                transactionHash: hash,\n                issuedContractAddress\n            } = await AppConnector.connector.createBundle(meta, TokenMediaLoaderComponent.value.file, selectedForBundle.value.tokens)\n\n            contractsNeedToUpdate.push(issuedContractAddress)\n            contractsNeedToUpdate = [...new Set(contractsNeedToUpdate)]\n\n            store.cleanSavedTokensForBundle()\n\n            TrnView\n                .open({hash})\n                .onClose(() => {\n                    log('contractsNeedToUpdate', contractsNeedToUpdate);\n                    router.push({name: 'Gallery'})\n                    AppConnector.connector.updateContractTokensList(contractsNeedToUpdate)\n                })\n        }\n        catch (e) {\n            log('Bundle', e);\n            alert.open(getErrorTextByCode(e.message) || e.message, 'Error:')\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n</script>\n","import script from \"./BundlePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BundlePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport GalleryPage from '@/views/GalleryPage.vue'\nimport TokenDetail from '@/views/TokenDetail.vue'\nimport ApplyPage from '@/views/ApplyPage.vue'\nimport MintPage from '@/views/MintPage.vue'\nimport BundlePage from '@/views/BundlePage.vue'\nimport LoginPage from '@/views/LoginPage.vue'\nimport AppConnector from '@/crypto/AppConnector'\nimport {ConnectionStore} from '@/crypto/helpers'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Gallery',\n    component: GalleryPage,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/asset/:contractAddress/:tokenID',\n    name: 'TokenDetail',\n    component: TokenDetail,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/mint',\n    name: 'MintPage',\n    component: MintPage,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/apply',\n    name: 'ApplyPage',\n    component: ApplyPage,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/bundle',\n    name: 'BundlePage',\n    component: BundlePage,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/login',\n    name: 'LoginPage',\n    component: LoginPage\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach(async (to, from) => {\n  const loginPage = {\n    name: 'LoginPage',\n    query: {\n      need_auth: true,\n      redirect: to.fullPath\n    }\n  }\n  try{\n    const {connector} = await AppConnector.init()\n\n    if(to.meta.requiresAuth){\n      try{\n        await connector.isUserConnected()\n        ConnectionStore.getUserIdentity()\n      }\n      catch (e) {\n        return loginPage\n      }\n    }\n    else if(to.name === 'LoginPage') {\n      try{\n        await connector.isUserConnected()\n        ConnectionStore.getUserIdentity()\n        return {name: 'Gallery'}\n      }\n      catch (e) {}\n    }\n    return true\n  }\n  catch (e) {\n    return loginPage\n  }\n})\n\nexport default router\n","import ProviderStorage from \"@/crypto/EVM/rarible/ProviderStorage\";\nimport ConnectionSteps from \"@/crypto/EVM/rarible/ConnectionSteps\";\n\nimport {Connector, InjectedWeb3ConnectionProvider} from \"@rarible/connector\";\nimport {WalletConnectConnectionProvider} from \"@rarible/connector-walletconnect\";\nimport {mapEthereumWallet} from \"@rarible/connector-helper\";\nimport {stringCompare} from \"@/utils/string\";\nimport router from \"@/router\";\nimport {Etherium} from \"@/crypto/helpers\";\nimport {Networks, ConnectionStore, ErrorList} from '@/crypto/helpers'\nimport {AppStorage} from '@/crypto/helpers'\nimport alert from \"@/utils/alert\";\nimport {log} from \"@/utils/AppLogger\";\n\nexport default {\n    controllerClass: null,\n\n    // connector instance from Rarible\n    _RaribleConnector: null,\n    _connectingOptions: [],\n    _connectToNetworkId: null,\n\n    // to disconnect when user connect to unsupported network\n    _disconnectMethod: null,\n\n    _waitingForUserConnected: [],\n\n    _status: '',\n\n    // for use inside this class only\n    _connectedOptions: {\n        blockchain: null,\n        chainId: null,\n        address: null,\n        provider: null,\n        wallet: null\n    },\n\n    setStatus(value){\n        this._status = value\n    },\n    getStatus(){\n        return this._status\n    },\n\n    makeConnectedCallbackFunction(){\n        const add = {};\n        const promise = new Promise((resolve, reject) => {\n            add.resolve = resolve\n            add.reject = reject\n        })\n        this._waitingForUserConnected.push(add)\n        return promise\n    },\n    getConnectedCallbackFunction(){\n        return this._waitingForUserConnected\n    },\n    clearConnectedCallbackFunctions(){\n        this._waitingForUserConnected = []\n    },\n\n    async disconnect(){\n        localStorage.removeItem('walletconnect')\n        location.reload()\n    },\n\n    async init(controllerClass = null){\n        if(this._RaribleConnector) return true\n\n        if(controllerClass) this.controllerClass = controllerClass\n\n        const injected = mapEthereumWallet(new InjectedWeb3ConnectionProvider())\n        const walletConnect = mapEthereumWallet(new WalletConnectConnectionProvider({\n            rpc: {\n                1: 'https://mainnet.infura.io/v3/6c3a9507f03a49589e3cb762331f2026',\n                3: 'https://ropsten.infura.io/v3/6c3a9507f03a49589e3cb762331f2026',\n                4: 'https://rinkeby.infura.io/v3/6c3a9507f03a49589e3cb762331f2026',\n                80001: 'https://rpc-mumbai.matic.today',\n                1666700000: 'https://api.s0.b.hmny.io',\n                77: 'https://sokol.poa.network',\n            },\n            qrcodeModal: {\n                open: (uri, closeTrigger) => {\n\n                    const closeWrapper = () => {\n                        const status = this.getStatus()\n                        // user was connected, then lost session (in walletConnect), and cancel to reconnect\n                        if(status === 'connected'){\n                            if(this._disconnectMethod) this._disconnectMethod()\n                            location.reload()\n                        }\n                        closeTrigger()\n                    }\n\n                    const store = AppStorage.getStore()\n                    store.openWalletConnectQR(uri, closeWrapper)\n                },\n                close: () => {\n                    const store = AppStorage.getStore()\n                    store.closeWalletConnectQR({isAutomatic: true})\n                }\n            }\n        }))\n\n        this._RaribleConnector = Connector.create(injected, ProviderStorage).add(walletConnect)\n\n        this._connectingOptions = await this._RaribleConnector.getOptions()\n\n        this._RaribleConnector.connection.subscribe(async (con) => {\n            this.setStatus(con.status)\n\n            if(con.status === ConnectionSteps.connected && con.connection){\n                const connection = con.connection\n                this._disconnectMethod = con.disconnect || null\n\n                // skip repeated callback (when using walletConnect)\n                if(\n                    this._connectedOptions.blockchain === connection.blockchain &&\n                    stringCompare(this._connectedOptions.address, connection.address) &&\n                    this._connectedOptions.chainId === await connection.wallet.ethereum.getChainId()\n                ) {\n                    return\n                }\n\n                let provider = connection.wallet.ethereum.config.web3.currentProvider\n                if(!('request' in provider)) provider = connection.wallet.ethereum.config.web3.givenProvider\n\n                try{\n                    const isSwitched = await this.switchNetwork(provider, this._connectToNetworkId)\n                    // return because after network switched lib fired new connection event\n                    if(isSwitched) {\n                        window.location.reload()\n                        return\n                    }\n                }\n                catch (e) {\n                    log('try to switch error', e);\n                    const viewErrors = [ErrorList.NETWORK_IN_NOT_INSTALLED, ErrorList.CHANGE_NETWORK_REJECTED, ErrorList.SWITCH_NETWORK_ERROR]\n                    const errorType = viewErrors.includes(e.message)? e.message : 'Error to connecting'\n                    alert.open(errorType)\n                    this.getConnectedCallbackFunction().forEach(promise => promise.reject())\n                    this.clearConnectedCallbackFunctions()\n                    if(this._disconnectMethod) this._disconnectMethod()\n                    return\n                }\n\n                this._connectedOptions.blockchain = connection.blockchain\n                this._connectedOptions.chainId = await connection.wallet.ethereum.getChainId()\n                this._connectedOptions.address = connection.address\n                this._connectedOptions.provider = provider\n                this._connectedOptions.wallet = connection.wallet\n\n                const updateUserTokensAction = () => {\n                    router.push({name: 'Gallery'})\n                }\n\n                let connectedNetworkName = Networks.getNameByChainID(this._connectedOptions.chainId)\n\n                if(connectedNetworkName !== 'unknown'){\n                    const needToUpdateUserTokens = !!ConnectionStore.getProvider()\n\n                    ConnectionStore.setConnection({\n                        network: {\n                            name: connectedNetworkName,\n                            id: this._connectedOptions.chainId\n                        },\n                        userIdentity: this._connectedOptions.address,\n                        disconnectMethod: this._disconnectMethod,\n                        provider: Etherium.getProvider(this._connectedOptions.provider),\n                        providerType: 'Web3Provider',\n                        blockchain: this._connectedOptions.blockchain,\n                        wallet: this._connectedOptions.wallet\n                    })\n\n                    this.getConnectedCallbackFunction().forEach(promise => promise.resolve(this._connectedOptions.address))\n                    this.clearConnectedCallbackFunctions()\n\n                    // update only if user change network\n                    if(needToUpdateUserTokens) updateUserTokensAction()\n\n                    // update tokens after connected\n                    // fetchCollectionsWithTokens\n                    if(this.controllerClass) this.controllerClass.fetchCollectionsWithTokens()\n                }\n                else {\n                    // if connecting to unsupported networks not allowed\n                    this.getConnectedCallbackFunction().forEach(promise => promise.reject())\n                    this.clearConnectedCallbackFunctions()\n                    this.controllerClass.tryToConnectToUnsupportedNetwork()\n                    if(this._disconnectMethod) this._disconnectMethod()\n                }\n            }\n            else if(con.status === ConnectionSteps.disconnected) {\n                const reloadPage = !!ConnectionStore.getProvider()\n\n                // clear connection data\n                ConnectionStore.clearConnection()\n                this._connectedOptions.blockchain =\n                this._connectedOptions.chainId =\n                this._connectedOptions.address =\n                this._connectedOptions.provider =\n                this._connectedOptions.wallet = null\n\n                this.getConnectedCallbackFunction().forEach(promise => promise.reject())\n                this.clearConnectedCallbackFunctions()\n\n                if(reloadPage) location.reload()\n            }\n        })\n\n        return await this.makeConnectedCallbackFunction()\n    },\n\n    clearConnectedSettings(){\n        this._connectToNetworkId = null\n    },\n\n    async switchNetwork(provider, chainId = null){\n        // chainId is null when user already connected, and reload page\n        if(!chainId) return;\n\n        const chainHEX = `0x${chainId.toString(16)}`\n\n        // if chain is the same dont return true (because we didn`t switch network)\n        if(Number(provider.chainId) === chainId) {\n            this.clearConnectedSettings()\n            return\n        }\n\n        try {\n            await provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: chainHEX }],\n            });\n\n            this.clearConnectedSettings()\n            return true\n        }\n        catch (error) {\n            log('Switch error', error);\n            // @todo mobile metamask return error with no reason, so skip this error\n            if(provider.walletMeta.name === 'MetaMask'){\n                if(error.message === 'JSON RPC response format is invalid'){\n                    this.clearConnectedSettings()\n                    return true\n                }\n                else if(error.message.includes('Unrecognized chain ID')){\n                    throw Error(ErrorList.NETWORK_IN_NOT_INSTALLED)\n                }\n            }\n            else{\n                if(error.code === 4902) throw Error(ErrorList.NETWORK_IN_NOT_INSTALLED)\n                else if(error.code === 4001) throw Error(ErrorList.CHANGE_NETWORK_REJECTED)\n                throw Error(ErrorList.SWITCH_NETWORK_ERROR)\n            }\n        }\n    },\n\n    async connectToWallet(walletName, networkID){\n        if(!this._RaribleConnector) throw new Error(ErrorList.CONNECTOR_NOT_INIT)\n\n        if(this.getStatus() === ConnectionSteps.connected) return this.getStatus()\n\n        const provider = this._connectingOptions.find(option => option.option === walletName)\n        if(!provider) throw new Error(ErrorList.PROVIDER_NOT_FOUND)\n\n        this._connectToNetworkId = networkID\n        await this._RaribleConnector.connect(provider)\n        return await this.makeConnectedCallbackFunction()\n    },\n\n    async isUserConnected(){\n        const status = this.getStatus()\n        if(status === ConnectionSteps.connected) return ConnectionStore.getUserIdentity()\n        else if(status === ConnectionSteps.initializing || status === ConnectionSteps.connecting) return await this.makeConnectedCallbackFunction()\n        else throw new Error(ErrorList.USER_NOT_CONNECTED)\n    }\n}","import Evm from \"@/crypto/EVM\";\nimport RaribleConnector from \"@/crypto/EVM/rarible/Connector\";\nimport SmartContract from \"@/crypto/EVM/SmartContract\";\nimport {AppStorage, ConnectionStore, DecentralizedStorage, Token} from \"@/crypto/helpers\";\n\nimport {ActionTypes} from \"@/crypto/helpers\"\nimport {stringCompare} from \"@/utils/string\";\nimport {CollectionType} from \"@/utils/collection\";\nimport AppConnector from \"@/crypto/AppConnector\";\n\nclass Rarible extends Evm{\n\n    connector = RaribleConnector\n\n    constructor(){\n        super()\n    }\n\n    async createBundle(tokens){\n        const character = tokens.find(t => CollectionType.isBundle(t.contract.type))\n\n        const haveInnerTokens = await this.getWrappedTokensObjectList(character.token.contractAddress, character.token.id)\n\n        if(haveInnerTokens.length){\n            return await this.addTokensToBundle(character.token, tokens.map(t => t.token).filter(t => !stringCompare(t.identity, character.token.identity)))\n        }\n\n        const {\n            address,\n            metaCID,\n            tokensList\n        } = await super.createBundle(tokens)\n\n        const contract = new SmartContract({\n            address,\n            type: 'bundle'\n        })\n\n        const storage = AppStorage.getStore()\n\n        storage.setProcessStatus(ActionTypes.minting_bundle)\n        const result = await contract.makeBundle(tokensList, metaCID, storage.setProcessStatus)\n\n        return {\n            transactionHash: result.transactionHash,\n            issuedContractAddress: address\n        }\n    }\n\n    async applyEffectToToken({name, link, description}, original, effect){\n        const {\n            resultTokenCID,\n            contractAddress,\n            tokensList,\n            tempImage\n        } = await super.applyEffectToToken({name, link, description}, original, effect)\n\n\n        const contract = new SmartContract({\n            address: contractAddress,\n            type: 'bundle'\n        })\n\n        const storage = AppStorage.getStore()\n        storage.setProcessStatus(ActionTypes.minting_bundle)\n\n        const result = await contract.makeBundle(tokensList, resultTokenCID, storage.setProcessStatus)\n\n        return {\n            transactionHash: result.transactionHash,\n            issuedContractAddress: contractAddress,\n            tempImage\n        }\n    }\n\n    async addTokensToBundle(originToken, needToAddTokenList){\n        const {\n            addingTokenList\n        } = await super.addTokensToBundle(needToAddTokenList)\n\n        const contract = new SmartContract({\n            address: originToken.contractAddress,\n            type: 'bundle'\n        })\n\n        const store = AppStorage.getStore()\n        await contract.approveTokenList(addingTokenList, store.setProcessStatus)\n\n        store.setProcessStatus(ActionTypes.adding_to_bundle)\n        const trn = await contract.addToBundle(originToken.id, addingTokenList)\n\n        store.setProcessStatus(ActionTypes.generating_media)\n\n        const bundleAge = originToken.attributes.find(t => t.trait_type === 'age')?.value\n        const bundleMood = originToken.attributes.find(t => t.trait_type === 'mood')?.value\n\n        const bundleCopy = JSON.parse(JSON.stringify(originToken))\n        bundleCopy.inner.push(...needToAddTokenList)\n\n        const {file} = await this.generateNewTokenImage(\n            {\n                age: bundleAge,\n                mood: bundleMood\n            },\n            bundleCopy\n        )\n\n\n        // const applyImages = [...originToken.inner.map(t => t.image), ...needToAddTokenList.map(t => Token.getBaseFileURL(t.image))]\n        // const {file} = await Token.applyAssets(\n        //     process.env.VUE_APP_APPLY_EFFECT_ENDPOINT,\n        //     originToken.origin.image_origin,\n        //     applyImages\n        // )\n\n        const URI_id = Token.getFileIdByURL(originToken.origin.image)\n        await DecentralizedStorage.changeFile(file, URI_id)\n        store.updateTokenImageAndAttributes(originToken)\n\n\n        // if current and origin images are the same it means that bundle is empty\n        // if(originToken.origin.image === originToken.origin.image_origin){\n        //     const newImageURL = await DecentralizedStorage.loadFile(file)\n        //     const tokenNewMetaData = {\n        //         ...originToken.origin,\n        //         image: newImageURL\n        //     }\n        //     const URI_id = Token.getFileIdByURL(originToken.uri)\n        //     await DecentralizedStorage.changeFile(tokenNewMetaData, URI_id)\n        //     store.updateTokenImageAndAttributes(originToken, null, newImageURL)\n        // }\n        // else{\n        //     // change current image (with saving image URL)\n        //     const URI_id = Token.getFileIdByURL(originToken.origin.image)\n        //     await DecentralizedStorage.changeFile(file, URI_id)\n        //     store.updateTokenImageAndAttributes(originToken)\n        // }\n\n        return trn\n    }\n\n    async removeAssetsFromBundle(originToken, removeToken){\n        const {\n            removingTokens\n        } = await super.removeAssetsFromBundle([removeToken])\n\n        const store = AppStorage.getStore()\n\n        const contract = new SmartContract({\n            address: originToken.contractAddress,\n            type: 'bundle'\n        })\n        const tx = await contract.removeFromBundle(originToken.id, removingTokens)\n\n\n        store.setProcessStatus(ActionTypes.generating_media)\n\n        const bundleAge = originToken.attributes.find(t => t.trait_type === 'age')?.value\n        const bundleMood = originToken.attributes.find(t => t.trait_type === 'mood')?.value\n\n        const bundleCopy = JSON.parse(JSON.stringify(originToken))\n        bundleCopy.inner = bundleCopy.inner.filter(t => !stringCompare(t.identity, removeToken.identity))\n\n        const {file} = await this.generateNewTokenImage(\n            {\n                age: bundleAge,\n                mood: bundleMood\n            },\n            bundleCopy\n        )\n\n        const URI_id = Token.getFileIdByURL(originToken.origin.image)\n        await DecentralizedStorage.changeFile(file, URI_id)\n        store.updateTokenImageAndAttributes(originToken)\n\n        // const originImage = originToken.origin.image_origin\n        // const remainEffectImages = originToken.inner.filter(t => t.identity !== removeToken.identity).map(t => t.image)\n\n        // if(remainEffectImages.length) {\n        //     const {file} = await Token.applyAssets(\n        //         process.env.VUE_APP_APPLY_EFFECT_ENDPOINT,\n        //         originImage,\n        //         remainEffectImages\n        //     )\n        //     const URI_id = Token.getFileIdByURL(originToken.origin.image)\n        //     await DecentralizedStorage.changeFile(file, URI_id)\n        //     store.updateTokenImageAndAttributes(originToken)\n        // }\n        // else {\n        //     const tokenNewMetaData = {\n        //         ...originToken.origin,\n        //         image: originImage\n        //     }\n        //     const URI_id = Token.getFileIdByURL(originToken.uri)\n        //     await DecentralizedStorage.changeFile(tokenNewMetaData, URI_id)\n        //     store.updateTokenImageAndAttributes(originToken, null, originImage)\n        // }\n\n        return tx\n    }\n\n    async unbundleToken(token){\n        const contract = new SmartContract({\n            address: token.contractAddress,\n            type: 'bundle'\n        })\n        return await contract.unwrapToken(token.id)\n    }\n\n    async createNewToken(meta, image, contractAddress){\n        const {\n            metaCID\n        } = await super.createTokenMeta(meta, image)\n\n        const contract = new SmartContract({\n            address: contractAddress\n        })\n        const result = await contract.mint(ConnectionStore.getUserIdentity(), metaCID)\n        result.issuedContractAddress = contractAddress\n        return result\n    }\n\n    async sendNFT(tokenObject, toAddressPlain) {\n        const {\n            contractAddress,\n            tokenID,\n            fromAddress,\n            toAddress\n        } = await super.sendNFT(tokenObject, toAddressPlain)\n\n        const Contract = new SmartContract({\n            address: contractAddress\n        })\n        return await Contract.sendToken(tokenID, fromAddress, toAddress)\n    }\n}\n\nexport default Rarible","import Rarible from \"@/crypto/EVM/rarible\";\nimport {ErrorList} from \"@/crypto/helpers\";\nimport {log} from \"@/utils/AppLogger\";\n\nconst AppConnector = {\n    type: '',\n    connector: null,\n\n    getSavedConnectorName(){\n        return localStorage.getItem('global-app-connector') || 'rarible'\n    },\n    setSavedConnectorName(name){\n        localStorage.setItem('global-app-connector', name)\n        return name\n    },\n    clearConnectorName(){\n        localStorage.setItem('global-app-connector', '')\n    },\n\n    async init(withType = null){\n        if(this.connector && !withType) return this\n\n        const connectorType = withType? this.setSavedConnectorName(withType) : this.getSavedConnectorName()\n\n        if(connectorType === 'rarible'){\n            this.type = 'rarible'\n            this.connector = new Rarible()\n            await this.connector.init()\n        }\n\n        if(!this.connector) throw new Error(ErrorList.CONNECTOR_NAME_NOT_SPECIFIED)\n\n        return this\n    },\n\n    async connect(wallet, network){\n        try{\n            await this.connector.isUserConnected()\n            return true\n        }\n        catch (e){\n            log(e)\n            try{\n                return await this.connector.connectToWallet(wallet, network)\n            }\n            catch (e) {\n                log(e)\n            }\n        }\n        return false\n    }\n}\n\nexport default AppConnector","<template>\n  <Modal\n    class=\"wallet\"\n    v-if=\"isOpen\"\n    :options=\"{withoutClose: true}\"\n    @close=\"close\"\n  >\n    <template #title>Connect to wallet</template>\n    <template #default>\n      <div class=\"wallet__step\">\n        <div class=\"wallet__step-title\">\n          <div>Step 1</div>\n          <div>Choose Network</div>\n        </div>\n        <div class=\"wallet__step-items\">\n          <div\n            v-for=\"option in networks\"\n            :key=\"option.id\"\n            :class=\"{'selected': selectedNetwork === option.id, 'na': !option.available}\"\n            @click=\"option.available? setNetwork(option.id) : null\"\n          >\n            <div>\n              <img\n                alt=\"\"\n                :src=\"networkAssets+'network/'+option.key+'.svg'\"\n              />\n            </div>\n            <div>{{ option.name }}</div>\n            <svg viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"11.75\" cy=\"11.75\" r=\"10.25\" stroke-width=\"2\"/>\n              <path d=\"M7.375 12.375L9.875 14.875L16.125 8.625\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n      <div class=\"wallet__step\">\n        <div class=\"wallet__step-title\">\n          <div>Step 2</div>\n          <div>Choose Wallet</div>\n        </div>\n        <div class=\"wallet__step-items\">\n          <div\n            v-for=\"option in wallets\"\n            :key=\"option.key\"\n            :class=\"{'selected': selectedWallet === option.key, 'na': !option.available}\"\n            @click=\"option.available? setWallet(option.key) : null\"\n          >\n            <div>\n              <img\n                alt=\"\"\n                :src=\"networkAssets+'wallet/'+option.key+'.svg'\"\n              />\n            </div>\n            <div>{{ option.name }}</div>\n            <svg viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"11.75\" cy=\"11.75\" r=\"10.25\" stroke-width=\"2\"/>\n              <path d=\"M7.375 12.375L9.875 14.875L16.125 8.625\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n      <LoaderElement v-if=\"isConnecting\" class=\"absolute with-bg\">Connecting...</LoaderElement>\n    </template>\n    <template #controls>\n      <span\n        class=\"btn\"\n        :class=\"{na: !submitAvailable}\"\n        @click=\"submitAvailable? submit() : null\"\n      >Connect</span>\n    </template>\n  </Modal>\n</template>\n\n<script setup>\n  import Modal from '@/components/UI/Modal'\n  import LoaderElement from '@/components/UI/Loader'\n  import {useWalletConnection} from \"@/components/helpers/WalletConnect\";\n  import {ref} from \"vue\";\n  import AppConnector from '@/crypto/AppConnector'\n  import {ConnectorTypes} from '@/crypto/helpers'\n  import {useRouter, useRoute} from \"vue-router\";\n  import {log} from \"@/utils/AppLogger\";\n  const router = useRouter()\n  const route = useRoute()\n  const {\n      isOpen,\n      networks,\n      wallets,\n      selectedNetwork,\n      selectedWallet,\n      networkAssets,\n      close,\n      setNetwork,\n      setWallet,\n      submitAvailable\n  } = useWalletConnection()\n\n  const isConnecting = ref(false)\n\n  const submit = async () => {\n      isConnecting.value = true\n      try{\n          const selected = (selectedWallet.value === '1inch')? 'walletconnect' : selectedWallet.value\n          await (await AppConnector.init(ConnectorTypes.RARIBLE)).connect(selected, selectedNetwork.value)\n\n          const heedRedirect = route.query && route.query.redirect || '/'\n          await router.push({path: heedRedirect})\n      }\n      catch (e) {\n          log(e)\n      }\n      finally {\n          isConnecting.value = false\n      }\n  }\n</script>","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Modal\n    class=\"wallet\"\n    v-if=\"isWalletConnectModalOpen\"\n    @close=\"close\"\n  >\n    <template #title>Connect Wallet</template>\n    <template #default>\n      <div class=\"wallet__qr-code\">\n        <qrcode-vue\n          :value=\"walletConnectCode\"\n          level=\"M\"\n          background=\"#3C165C\"\n          foreground=\"#ffffff\"\n          render-as=\"svg\"\n        />\n      </div>\n    </template>\n    <template #controls>\n      <span class=\"btn\" @click=\"copyBTN\">Copy to clipboard</span>\n    </template>\n  </Modal>\n</template>\n\n<script setup>\n  import Modal from '@/components/UI/Modal'\n  import {useStore} from \"@/store/main\";\n  import {storeToRefs} from \"pinia\";\n  import copy from 'copy-to-clipboard';\n  import QrcodeVue from 'qrcode.vue'\n  const store = useStore()\n  const {\n      isWalletConnectModalOpen,\n      walletConnectCode\n  } = storeToRefs(store);\n\n  const copyBTN = () => {\n      copy(walletConnectCode.value)\n  }\n  const close = () => store.closeWalletConnectQR()\n</script>","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"trn-hash\">\n    <a target=\"_blank\" :href=\"getExplorerLink('transaction', props.hash)\" v-text=\"catToFixed(props.hash)\"></a>\n    <a target=\"_blank\" :href=\"getExplorerLink('transaction', props.hash)\">\n      <component :is=\"Icons.newTab\" title=\"Open in explorer\"/>\n    </a>\n    <CopyIcon :value=\"props.hash\"/>\n  </div>\n</template>\n\n<script setup>\n    import {useStore} from \"@/store/main\";\n    import {storeToRefs} from \"pinia\";\n    import Icons from \"@/components/UI/icons\";\n    import CopyIcon from \"@/components/UI/CopyIcon\";\n    import {catToFixed} from \"@/utils/string\";\n\n    const props = defineProps({\n        hash: String\n    })\n\n    const store = useStore()\n    const {getExplorerLink} = storeToRefs(store);\n</script>","import script from \"./TransactionHash.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TransactionHash.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TransactionView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TransactionView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <template v-if=\"isAppReady\">\n    <router-view/>\n\n    <TransactionViewModal/>\n    <ChooseWalletModal/>\n  </template>\n  <LoaderElement v-else class=\"absolute with-bg\"/>\n\n  <WalletConnectQRModal/>\n  <ConfirmModal/>\n  <AlertModal/>\n</template>\n\n<script setup>\n    import AlertModal from '@/components/UI/Alert'\n    import ConfirmModal from '@/components/UI/Confirm'\n    import ChooseWalletModal from '@/components/modals/chooseWallet/Modal'\n    import LoaderElement from '@/components/UI/Loader'\n    import WalletConnectQRModal from '@/components/modals/walletConnectQR/Modal'\n    import TransactionViewModal from '@/components/modals/TransactionView'\n\n    import AppConnector from \"@/crypto/AppConnector\";\n    import {useStore} from \"@/store/main\";\n    import {storeToRefs} from \"pinia\";\n    import {onMounted} from \"vue\";\n    import {log} from \"@/utils/AppLogger\";\n    const store = useStore()\n    const {\n        isAppReady\n    } = storeToRefs(store);\n\n    onMounted(async () => {\n        try{\n            await AppConnector.init()\n        }\n        catch (e){\n            log(e)\n        }\n        finally {\n            store.setAppReady()\n        }\n    })\n</script>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\n\nimport './assets/styles/index.scss'\n\nconst pinia = createPinia()\n\ncreateApp(App)\n    .use(router)\n    .use(pinia)\n    .mount('#app')\n"],"sourceRoot":""}